<?php
function v3_route_stops_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'v3_route_stops'),
  );
}

function v3_route_stops_menu() {
	$items['routestops'] = array(
    'title' => 'Load Bus Route And Stops',
    'description' => 'List, add, and edit Route Stops.',
    'page callback' => 'v3_busroute',
    'page arguments' => array('list'),
    // 'access arguments' => array('administer users'),
	'type' => MENU_CALLBACK,
'access callback' => 'user_access',
		'access arguments' => array('access content'),		
	);

  $items['routestops/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
    'weight' => -10,
  );
  $items['routestops/create'] = array(
    'title' => 'Add New Route And Stops',
    'page arguments' => array('create'),
    // 'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );	

	$items['routestops/create/next'] = array(
    'title' => 'Routes And Stops',
    'description' => 'Routes And Stops',
	'page callback' => 'drupal_get_form',
    'page arguments' => array('busroute_next_create'),	
   // 'access arguments' => array('administer users'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
	);  
 
  
  $items['routestops/edit'] = array(
    'title' => 'Edit Routes And Stops',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('busroute_edit'),
    // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
  $items['routestops/delete'] = array(
    'title' => 'Delete Routes And Stops',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('busroute_delete'),
   // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );  

   $items['routestops/studentlist'] = array(
    'title' => 'List Student Bus Details',
    'page arguments' => array('studentlist'),
    // 'access arguments' => array('administer users'),
	'weight' => 2,
    'type' => MENU_LOCAL_TASK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),
		
  );
 
$items['routestops/studentlist/ind/ahahjs2'] = array(
        'page callback' => 'busroute_student_ahah_field_js_for_ind3',
    //    'access arguments' => array('administer ahahtestmodule'),
        'type' => MENU_CALLBACK,
    			'access callback' => 'user_access',
    			'access arguments' => array('access content'),	
  ); 

$items['routestops/studentlist/edit'] = array(
    'title' => 'Edit Student And Bus Details',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('busroute_student_edit'),
    // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
  $items['routestops/studentlist/delete'] = array(
    'title' => 'Delete Student And Bus Details',
    'page callback' => 'drupal_get_form',
	'page arguments' => array('busroute_studentlist_delete'),
   // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
	'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );  
$items['routestops/studentlist_create'] = array(
    'title' => 'Add Student Bus Details',
    'page arguments' => array('studentlist_create'),
    // 'access arguments' => array('administer users'),
	'weight' => 4,
    'type' => MENU_LOCAL_TASK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );	
  
  $items['routestops/studentlist_create/ind/ahahjs2'] = array(
        'page callback' => 'busroute_studentlist_ahah_field_js_for_ind2',
    //    'access arguments' => array('administer ahahtestmodule'),
        'type' => MENU_CALLBACK,
    			'access callback' => 'user_access',
    			'access arguments' => array('access content'),	
  );
  
  $items['routestops/studentlist_create/from/ind/ahahjs3'] = array(
        'page callback' => 'busroute_student_from_stops_ahah_field_js_for_ind3',
    //    'access arguments' => array('administer ahahtestmodule'),
        'type' => MENU_CALLBACK,
    			'access callback' => 'user_access',
    			'access arguments' => array('access content'),	
  );
$items['routestops/studentlist_create/to/ind/ahahjs4'] = array(
        'page callback' => 'busroute_student_to_stops_ahah_field_js_for_ind4',
    //    'access arguments' => array('administer ahahtestmodule'),
        'type' => MENU_CALLBACK,
    			'access callback' => 'user_access',
    			'access arguments' => array('access content'),	
  );

 $items['routestops/studentlist/edit/ind/ahahjs3'] = array(
        'page callback' => 'busroute_student_edit_stops_ahah_field_js_for_ind3',
    //    'access arguments' => array('administer ahahtestmodule'),
        'type' => MENU_CALLBACK,
    			'access callback' => 'user_access',
    			'access arguments' => array('access content'),	
  );


  
return $items;
}

function busroute_edit(&$form_state, $fid) {
		db_set_active('qtxt_db');

$field = db_fetch_object(db_query("select route_number,route_description,stop_name,stop_description,stop_weight,account_route_id,route_stop_id,route_type from {qtxt_sms_route_stops_details_v3} b WHERE route_stop_id = %d ", $fid));


		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
		  $form['route_stop_id'] = array('#type' => 'value',
			'#value' => $fid,
		  );		  

		$form['userdefinedroute'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Your Route'),
			'#title' => t('Route Name'),
			'#required' => TRUE,
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->route_number,
		);	

        $form['userdefinedroutedesc'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Your Route Description'),
			'#title' => t('Route Description'),
			'#required' => TRUE,
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->route_description,
		);		

$form['userdefinedroutetype'] = array(
			'#type' => 'select',
            '#options' => array(			  
                   		   'inbound' => 'In Bound',
				   'outbound' => 'Out Bound',
				  	  				),	
			'#description' => t('Please Enter Your Route Type'),
			'#title' => t('Route Type'),
			'#required' => TRUE,
			 '#default_value' => $field->route_type,
		);				

		
		
		$form['userdefinedstop'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Your Stop'),
			'#title' => t('Stop Name'),
			'#required' => TRUE,
			  '#size' => 60,
			  '#maxlength' => 500,
    //        '#prefix' => '<br/><br/><br/><br/>',			  
			'#default_value' => $field->stop_name,				  
		);
$form['userdefinedstopdesc'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Your Stop Description'),
			'#title' => t('Stop Description'),
			'#required' => TRUE,
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->stop_description,				  
		);
$form['userdefinedstopweight'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Your Stop Weight'),
			'#title' => t('Stop Weight'),
			'#required' => TRUE,
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->stop_weight,				  
		);
        
		$form['userdefinedrouteid'] = array(
			'#type' => 'hidden',
			'#default_value' => $field->account_route_id,
		);			

		$form['userdefinedstopid'] = array(
			'#type' => 'hidden',
			'#default_value' => $field->route_stop_id,				  
		);

/*
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Submit'), 
'#prefix' => '<br/>'
		
	  );
 $form['buttons']['submit1'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );
*/
 return confirm_form($form, t('<a href="@edit-field"></a> ', array('@edit-field' => url('routestops'))),t('routestops'));

$form[ 'buttons' ]['submit']['#attributes']['class']  = $form[ 'buttons' ]['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;
		


}



function busroute_edit_validate($form, &$form_state) {


    if(is_numeric($form_state['values']['userdefinedroute'])){
        form_set_error('userdefinedroute' , t('Route Name contains invalid characters. Only alpha numeric or letters are allowed!'));
    }

    if(is_numeric($form_state['values']['userdefinedroutedesc'])){
        form_set_error('userdefinedroutedesc' , t('Route Description contains invalid characters. Only alpha numeric or letters are allowed!'));
    }
 if(is_numeric($form_state['values']['userdefinedstop'])){
        form_set_error('userdefinedstop' , t('Stop Name contains invalid characters. Only alpha numeric or letters are allowed!'));
    }

    if(is_numeric($form_state['values']['userdefinedstopdesc'])){
        form_set_error('userdefinedstopdesc' , t('Stop Description contains invalid characters. Only alpha numeric or letters are allowed!'));
    }
 if(!is_numeric($form_state['values']['userdefinedstopweight'])){
        form_set_error('userdefinedstopweight' , t('Stop Weight contains invalid number. Only integer are allowed!'));
    }

		
}	





function busroute_edit_submit ($form, &$form_state) {
$op = $form_state['values']['op'];
 // drupal_set_message(t("$op"));  
	if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'routestops/list';
		  return;	
	} 
	

		
	$routeNumber = $form_state['values']['route_stop_id'];
	
	$userdefinedroute = $form_state['values']['userdefinedroute'];
	$userdefinedroutedesc = $form_state['values']['userdefinedroutedesc'];
	$userdefinedroutetype = $form_state['values']['userdefinedroutetype'];
	$userdefinedstop = $form_state['values']['userdefinedstop'];
	$userdefinedstopdesc = $form_state['values']['userdefinedstopdesc'];
	$userdefinedstopweight = $form_state['values']['userdefinedstopweight'];
	$userdefinedrouteid = $form_state['values']['userdefinedrouteid'];
	$userdefinedstopid = $form_state['values']['userdefinedstopid'];
/* 
 drupal_set_message(t("Route : $userdefinedroute"));
      drupal_set_message(t("Route Desc : $userdefinedroutedesc"));
      drupal_set_message(t("Stop : $userdefinedstop"));
	  drupal_set_message(t("Stop Desc : $userdefinedstopdesc"));
	  drupal_set_message(t("Stop Weight : $userdefinedstopweight"));
      drupal_set_message(t("Route Id : $userdefinedrouteid"));
      drupal_set_message(t("Stop Id :  $userdefinedstopid"));
 */    
	

    $userdefinedroute = str_replace("'", "''", $userdefinedroute);
	$userdefinedroutedesc = str_replace("'", "''", $userdefinedroutedesc);	
    $userdefinedroutetype = str_replace("'", "''", $userdefinedroutetype);			
    $userdefinedstop = str_replace("'", "''", $userdefinedstop);
	$userdefinedstopdesc = str_replace("'", "''", $userdefinedstopdesc);

			
		db_set_active('qtxt_db');
		
		
	
		db_query("update {qtxt_sms_account_routes} set  route_number = '%s', route_description = '%s', route_type = '%s' WHERE account_route_id = %d ", $userdefinedroute, $userdefinedroutedesc,$userdefinedroutetype,$userdefinedrouteid);

			
		db_query("update {qtxt_sms_route_stops} set  stop_name = '%s', stop_description = '%s',stop_weight = %d  WHERE route_stop_id = %d ", $userdefinedstop, $userdefinedstopdesc,$userdefinedstopweight,$userdefinedstopid);

			
	
		db_set_active('default');

		drupal_set_message(t('The Routes %field1 And Stops  %field2 has been updated.', array('%field1' => $form_state['values']['userdefinedroute'],'%field2' => $form_state['values']['userdefinedstop'])));

		cache_clear_all();
  		unset ( $_SESSION['t_route'] );
  	//	unset ( $_SESSION['scholAccountGradeId'] );
  	//	unset ( $_SESSION['scholAssessmentName'] );
  	//	unset ( $_SESSION['scholAssessmentCategory'] );

		$form_state['redirect'] = 'routestops/list';
		return;
}

function busroute_delete(&$form_state, $fid) {


  
		db_set_active('qtxt_db');
	//	$field = db_fetch_object(db_query("SELECT descriptor_name, assessment_category_type, assessment_name  FROM {cce_schol_assesment_cat_det_descriptor_v} WHERE assessment_cat_det_descriptor_id = %d", $fid));
		
		$field = db_fetch_object(db_query("select route_number,route_description,stop_name,stop_description,stop_weight,account_route_id,route_stop_id from {qtxt_sms_route_stops_details_v3} b WHERE route_stop_id = %d ", $fid));
		
		
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
          $form['delroutestopid'] = array('#type' => 'value', '#value' => $fid);
		  $form['delroutenumber'] = array('#type' => 'value', '#value' => $field->route_number);
		  $form['delstopname'] = array('#type' => 'value', '#value' => $field->stop_name);
		//  $form['scholassessname'] = array('#type' => 'value', '#value' => $field->assessment_name);
		
		  return confirm_form($form,
			t('Are you sure you want to delete the Route -  %field  defined for Stop %field2 ?', array('%field' => $field->route_number, '%field2' => $field->stop_name)), 'routestops',
			t('This action cannot be undone.  If you want to keep the user-entered data, instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('routestops/edit/'. $fid))),
			t('Delete'), t('Cancel'));
		}

/**
 * Process a field delete form submission.
 */
function busroute_delete_submit($form, &$form_state) {
		db_set_active('qtxt_db');
		db_query('DELETE FROM {qtxt_sms_route_stops} WHERE route_stop_id = %d', $form_state['values']['delroutestopid']);
		db_set_active('default');
		cache_clear_all();

		drupal_set_message(t('The Stop %field2 has been deleted.', array('%field2' => $form_state['values']['delstopname'])));
  		unset ( $_SESSION['t_route'] );
  //		unset ( $_SESSION['scholAccountGradeId'] );
  	//	unset ( $_SESSION['scholAssessmentName'] );
  	//	unset ( $_SESSION['scholAssessmentCategory'] );
		
		$form_state['redirect'] = 'routestops/list';
		return;
}


function v3_busroute($callback_arg = '') {
  
  $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;

//  drupal_set_message("Operamd - $op ");	
  
  switch ($op) {
//    case t('Add Stops'):
    case t('Add Stops'):	
    case 'create':
      $output = drupal_get_form('busroute_create');
      break;

	  case t('Submit'):	
    case 'studentlist_create':
      $output = drupal_get_form('busroute_studentlist_create');
      break;

    case t('Apply'):
   case 'studentlist':
	  $output = drupal_get_form('busroute_student_filter_form');
      $output .= drupal_get_form('busroute_student_details');
      break;
	  

	  default:
      if (!empty($_POST['routestops']) && isset($_POST['operation']) && ($_POST['operation'] == 'delete')) {
        $output = drupal_get_form('group_multiple_delete_confirm');
      }
      else {
        $output = drupal_get_form('busroute_filter_form');
        $output .= drupal_get_form('busroute_details');
//		$output .= drupal_get_form('busroute_student_details');
      }
  }
  return $output;
  
}


function busroute_create() {

		$form['rname'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter The Route Name'),
		//	'#default_value' => 5,
			'#title' => t('Route Name'),
			'#required' => TRUE,
		);			

	$form['rnamedesc'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter The Route Description'),
		//	'#default_value' => 5,
			'#title' => t('Route Description'),
			'#required' => TRUE,
		);			

	$form['rtype'] = array(
			'#type' => 'select',
            '#options' => array(			  
                   '' => 'Select...',
				   'inbound' => 'In Bound',
				   'outbound' => 'Out Bound',
				  	  				),			
			'#description' => t('Please Enter The Route Description'),
		//	'#default_value' => 5,
			'#title' => t('Route Type'),
			'#required' => TRUE,
		);			

				
		//$catOptions = array( '' => t('Select the Assessment Category Detail') );

		$form['numrows'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter Number of assessment descriptors you want to create'),
			'#default_value' => 1,
			'#title' => t('Number of Stops'),
			'#required' => TRUE,
		//	'#prefix' => '<br/><br/><br/><br/>',
		);			
		
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Add Stops'), 
'#prefix' => '<br/>' 		
	  );
$form[ 'buttons' ]['submit']['#attributes']['class']  = $form[ 'buttons' ]['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

		
}


function busroute_create_validate($form, &$form_state) {


    if(is_numeric($form_state['values']['rname'])){
        form_set_error('rname' , t('Route Name contains invalid characters. Only alpha numeric or letters are allowed!'));
    }

    if(is_numeric($form_state['values']['rnamedesc'])){
        form_set_error('rnamedesc' , t('Route Description contains invalid characters. Only alpha numeric or letters are allowed!'));
    }
	if(!is_numeric($form_state['values']['numrows'])){
        form_set_error('numrows' , t('Number of Stops contains invalid number. Only integer are allowed!'));
    }
   if ( ($form_state['values']['numrows'] == '' ) || ($form_state['values']['numrows'] < 1  ) || ($form_state['values']['numrows'] > 10  )) {
    form_set_error('', t('You must enter a number of stops value between 1 to 10.'));
  } 

		
}	

function busroute_create_submit($form, &$form_state) {


		  
   $op = $form_state['values']['op'];
  
	$routename = $form_state['values']['rname'];
    $routenamedesc = $form_state['values']['rnamedesc'];
	$routetype = $form_state['values']['rtype'];
	$totalrows =  $form_state['values']['numrows'];

	$_SESSION['route_name'] = $routename;	
	$_SESSION['route_description'] = $routenamedesc;	
	$_SESSION['route_type'] = $routetype;	
	$_SESSION['num_rows'] = $totalrows;	
	
	
	
	 
		  $form_state['redirect'] = 'routestops/create/next';
		  return;
}

// function busroute_next_create() {
function busroute_next_create_test(&$form_state, $fid) {
		$route_name = &$_SESSION['route_name'] ;		
		$num_rows = &$_SESSION['num_rows'];
		
	 $form['buttons']['submit1'] = array(                                                          
		'#type' => 'button',
		'#value' => t('Add New Row'), 
		'#name' => "check",
	  );
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Add Stops'),                                                 
	  );


	return $form;
}

function busroute_next_create() {

		$route_name = &$_SESSION['route_name'] ;		
		$route_namedesc = &$_SESSION['route_description'] ;
        $route_type = &$_SESSION['route_type'] ;		
		$num_rows = &$_SESSION['num_rows'];
		
//		drupal_set_message(t("Route Name - $route_name"));			
//		drupal_set_message(t("No Of Rows - $num_rows"));			
		

		$form['access'] = array(
		'#type' => 'fieldset',
		'#title' => t('Access log settings'),
		'#tree' => TRUE,
		'#visible' => false,	   
		 );			

		$i = 1;
		while( $i < ($num_rows +1 )) {
		
		$form['access']['sstop'][$i] = array(
					'#type' => 'textfield',
					'#description' => t('Please Enter The Stop Name'),
			//		'#options'=> $subjectOptions,
					'#title' => t('Stop Name'),
					'#required' => TRUE,
				);		
						 
				 
		$form['access']['estopdesc'][$i] = array(
					'#type' => 'textfield',
					'#description' => t('Please Enter Stop Description'),
			//		'#options'=> $valueg,
					'#title' => t('Stop Description'),
					'#required' => TRUE,
				);

        $form['access']['stopweight'][$i] = array(
					'#type' => 'textfield',
					'#description' => t('Please Enter The Weight Of The Stop'),
			//		'#options'=> $valueg,
					'#title' => t('Stop Weight'),
			        '#size' => 10,
		        	'#maxlength' => 10,
					'#required' => TRUE,
				);

				$form['access']['index'][$i] =  array('#type' => 'hidden', '#value' => $i);
				
				$i = $i + 1;
		}
	$form['#theme'] = 'test_form_busroute_theme';  

	$form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Submit'),                                                 
	  );

$form['buttons']['submit1'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );

	return $form;

}
/*
function busroute_next_create_validate($form, &$form_state) {

  if(is_numeric($form_state['access']['sstop'])){
        form_set_error('sstop' , t('Route Name contains invalid characters. Only alpha numeric or letters are allowed!'));
    }

    if(is_numeric($form_state['access']['estopdesc'])){
        form_set_error('estopdesc' , t('Route Description contains invalid characters. Only alpha numeric or letters are allowed!'));
    }
	
   if(!is_numeric($form_state['access']['stopweight'])){
        form_set_error('stopweight' , t('Stop Weight contains invalid number. Only integer are allowed!'));
    }
	
}	
*/
function busroute_next_create_submit($form, &$form_state) {
$op = $form_state['values']['op'];
if($op == "Cancel")
{
 $form_state['redirect'] = 'routestops/create';
		  return;
}
		$route_name = &$_SESSION['route_name'] ;
		$route_namedesc = &$_SESSION['route_description'] ;
		$route_type = &$_SESSION['route_type'] ;
		$num_rows = &$_SESSION['num_rows'];

	//	drupal_set_message(t("Route Name - $route_name"));	
 //       drupal_set_message(t("Route Description - $route_namedesc"));	
 drupal_set_message(t("Route type - $route_type"));		 
//		drupal_set_message(t("No Of Rows - $num_rows"));			
	
		
		$sstopArray = array();
		$estopdescArray = array();
        $stopweightArray = array();
		


		
	if ( isset( $form_state['clicked_button']['#post']['access']['sstop']) ) {
	$sstopArray = $form_state['clicked_button']['#post']['access']['sstop'];
	}
	if ( isset( $form_state['clicked_button']['#post']['access']['estopdesc']) ) {
	$estopdescArray = $form_state['clicked_button']['#post']['access']['estopdesc'];
	}
	if ( isset( $form_state['clicked_button']['#post']['access']['stopweight']) ) {
	$stopweightArray = $form_state['clicked_button']['#post']['access']['stopweight'];
	}
	
	db_set_active('qtxt_db');	
					db_query( "INSERT INTO `qtxt_sms_account_routes`(`account_route_id`,`route_number`,`route_description`,`creation_date`,`last_update_date`,`created_by`,`last_updated_by`,`account_id`,`route_type`)VALUES(null,'$route_name','$route_namedesc',sysdate(),sysdate(),'School Admin','School Admin',5,'$route_type')" ); 
					
					
					$resultnAccountRouteId = db_query("select account_route_id from `qtxt_sms_account_routes` where route_number = '$route_name' and route_description = '$route_namedesc' ");

     $nAccountRouteId = array( );
	while ( $row = db_fetch_object( $resultnAccountRouteId ) ) {
		$nAccountRouteId = $row->account_route_id;
	}
	
					
					
	db_set_active('default');	
	
	$a = 1;
	foreach ( $sstopArray as $key => $value ) {
			//db_set_active('qtxt_db');	

			$sstopa = $sstopArray[$key] ;
			$estopdesca = $estopdescArray[$key] ;
			$sweight = $stopweightArray[$key] ;
		
//	 drupal_set_message( t( "CLicked button Set"));
//		 drupal_set_message(t("Combo2 *** $a :  $sstopa  ---  $estopdesca -- $sweight"));
		 
		 db_set_active('qtxt_db');	
					
db_query( "INSERT INTO `qtxt_sms_route_stops`(`route_stop_id`,`account_route_id`,`stop_name`,`stop_description`,`stop_weight`,`creation_date`,`last_update_date`,`created_by`,`last_updated_by`)VALUES(null,$nAccountRouteId,'$sstopa','$estopdesca','$sweight',sysdate(),sysdate(),'School Admin','School Admin');
"); 					
					db_set_active('default');	
		
			$a = $a + 1;
	}
	
	drupal_set_message(t("Your Route '$route_name' and Stops have been inserted successfully."));	
	unset ( $_SESSION['t_route'] );
//  		unset ( $_SESSION['scholAccountGradeId'] );
//  		unset ( $_SESSION['scholAssessmentName'] );
//  		unset ( $_SESSION['scholAssessmentCategory'] );
	
    $form_state['redirect'] = 'routestops/list';
	return;
}


function v3_route_stops_theme() {
	return array(
		'test_form_busroute_theme' => array('arguments'=> array('form' => NULL),),
		'busroute_theme' => array('arguments'=> array('form' => NULL),),
		'student_busroute_theme' => array('arguments'=> array('form' => NULL),),
	);
}

function theme_test_form_busroute_theme($form)
{
	$rows = array();
	$i = 1;
	foreach(element_children($form['access']['index']) as $key) {
		$row = array(); 
		   $row[] =  drupal_render($form['access']['sstop'][$key]);
		   $row[] =  drupal_render($form['access']['estopdesc'][$key]);
		   $row[] =  drupal_render($form['access']['stopweight'][$key]);
		   $row[] =  drupal_render($form['access']['index'][$key]);
		   $rows[] = $row; 
		$i = $i +1 ;
	}
  if(count($rows)){
				$header = array(
					t('Stop Name'), t('Stop Description'), t('Stop Weight') );
	  }
  else{
    $header = array(t('First Name'), t('Last Name')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No users were found'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows , array(id=>"myid")); 
 $form['access']['#access'] = false;
return $output . drupal_render($form); 
}  



/**
 * Form builder; Return form for user administration filters.
 *
 * @ingroup forms
 * @see user_filter_form_submit()
 */
function busroute_filter_form() {

			
//	 $i = 0;
	  $form['filters'] = array(
		'#type' => 'fieldset',
		'#title' => t('Filter Criteria'),
		'#tree' => TRUE,
	  );
$c2Val = &$_SESSION['t_route'] ;
	  db_set_active('qtxt_db');	
		$result1 = db_query("SELECT distinct account_route_id,route_number from qtxt_sms_account_routes where account_id = 5");
		$accessOptions = array( '' => t('Select The Route') );
		while ($row = db_fetch_object($result1)){
		  $accessOptions[$row->account_route_id] = $row->route_number; 
		}
		db_set_active('default');
		
		$form['filters']['route'] = array( '#type' => 'select',
			'#description' => t('Please Select The Route'),
			'#options'=> $accessOptions,
			'#title' => t('Route'),
			'#default_value' => $c2Val,
			'#disabled' => FALSE,
							
		);
		

	 $form['filters']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Filter'),
        '#prefix' => '<br/>' 		
	  );
$form['filters']['submit']['#attributes']['class']  = $form['filters']['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

}



function busroute_filter_form_submit($form, &$form_state) {


$_SESSION['t_route'] = $form_state['values']['filters']['route'];

	if(!empty($_SESSION['t_route'])) {

		$grade = &$_SESSION['t_route'];

	} else {

		$grade = "";

	}


  $form_state['redirect'] = 'routestops';
  return;
}



function busroute_details($form_state) {
global $user;
$profile =  profile_load_profile($user);
$myMobileNumber =  $user->profile_mobile;  

  $header = array(
    array(),
    array('data' => t('Group Name'), 'field' => 'b.standard'),
    array('data' => t('Group Description'), 'field' => 'b.section'),
	t('Operations'),
  );


$c2Val = &$_SESSION['t_route'] ;


 // drupal_set_message(t("student - $clVal"));	



 // drupal_set_message(t("grade - $c2Val"));	


 $filterClass = "";

    if ( $c2Val != "" ) {

			$filterClass = " and b.account_route_id = $c2Val ";
//			 drupal_set_message(t("Inside of filter : $filterClass"));
	} 
	 else {
			$filterClass = " and b.account_route_id = b.account_route_id ";
//			 drupal_set_message(t("Outside of filter : $filterClass"));
	}
	
  db_set_active('qtxt_db');	
  $sql = "select route_number,route_description,stop_name,stop_description,route_number,stop_weight,route_stop_id from  {qtxt_sms_route_stops_details_v3} b where account_id = 5 " . $filterClass   ; 
    $query_count = "select COUNT(route_stop_id) from {qtxt_sms_route_stops_details_v3} b where account_id = 5 " . $filterClass ;
  
   $sql .= tablesort_sql($header);

  $result = pager_query($sql, 1000, 0, $query_count);
  db_set_active('default');


    $form['access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Access log settings'),
    '#tree' => TRUE,
	'#visible' => false,
  );


  $accounts = array();

$i = 1;  
  while ($account = db_fetch_object($result)) {

  $form['access']['account'][$i] = array(
		'#type' => 'checkbox',
		'#return_value' => $account->route_stop_id,
		'#default_value' => 0,
		'#tree' => TRUE,

	  );

// $form['access']['rnum'][$account->route_stop_id] =  array('#value' => $account->route_number);

 
 $form['access']['rnumber'][$account->route_stop_id] =  array('#value' => $account->route_number);

 $form['access']['rnumdesc'][$account->route_stop_id] =  array('#value' => $account->route_description);

	$form['access']['sname'][$account->route_stop_id] =  array('#value' => $account->stop_name);

	$form['access']['snamedesc'][$account->route_stop_id] =  array('#value' => $account->stop_description);

  $form['access']['sweight'][$account->route_stop_id] =  array('#value' => $account->stop_weight);

    $form['access']['rnum'][$account->route_stop_id] =  array('#type' => 'hidden','#value' => $account->route_stop_id);
   
   $form['access']['operations'][$account->route_stop_id] = array('#value' => l(t('edit'), "routestops/edit/$account->route_stop_id", array('query' => $destination)));	


//	$form['access']['operations2'][$account->route_stop_id] = array('#value' => l(t('delete'), "routestops/delete/$account->route_stop_id", array('query' => $destination)));	
	$i = $i + 1;
  }
// db_set_active('default');

  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));
  $form['#theme'] = 'busroute_theme';   
  $form['totalcount'] = array(
	'#type' => 'hidden', '#default_value' => ($i  -1 )
  );  
  return $form;
}

function theme_busroute_theme($form)
{
$rows = array();
$i = 1;

foreach(element_children($form['access']['rnum']) as $key) {
	$row = array(); 
//       $row[] =  drupal_render($form['access']['account'][$i]);

  $row[] =  drupal_render($form['access']['rnumber'][$key]);


       $row[] =  drupal_render($form['access']['rnumdesc'][$key]);

       $row[] =  drupal_render($form['access']['sname'][$key]);

	   $row[] =  drupal_render($form['access']['snamedesc'][$key]);

       $row[] =  drupal_render($form['access']['sweight'][$key]);
 
	   $row[] =  drupal_render($form['access']['operations'][$key]);	
//       $row[] =  drupal_render($form['access']['operations2'][$key]);	   
	$rows[] = $row; 
	$i = $i +1 ;
}


if(count($rows)){
				
				$header = array( ('Route Name'),('Route Description'), t('Stop Name'),t('Stop Description'), t('Stop Weight') );

				$header[] = array('data' => t('Action'), 'colspan' => 2);
  }
  else{
    $header = array(t('Route Name '), t('Stop Name')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No Routes were Created'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows); 
  $form['access']['#access'] = false;
 return $output . drupal_render($form); 
 return $output ; 
}  


function busroute_student_filter_form() {

	$form['filters'] = array(
		'#type' => 'fieldset',
		'#title' => t('Filter Criteria'),
		'#tree' => TRUE,
	  );

	  
$c20Val = &$_SESSION['t_stugrade'] ;
$c30Val = &$_SESSION['t_studentname'] ;
	  
db_set_active('qtxt_db');	

	  
	  $resultg1 = db_query(" SELECT distinct account_grade_id,grade_name FROM {qtxt_sms_route_details_v3} where account_id = 5 ");
				  $igradeOptions = array('' => t('Select..'));
				  while ($rowg1 = db_fetch_object($resultg1)) {
				  	$igradeOptions[$rowg1->account_grade_id ] =  $rowg1->grade_name; //This is the only line that changed from the code above.
				  	}
				db_set_active('default');
				  $form['filters']['stugrade'] = array('#type' => 'select',
				  				  		'#options' => $igradeOptions,
				  				  		'#title' => t('Class'),
				  				  		'#description' => t('Please Select The Class'),
				  				  		'#disabled' => FALSE,
										'#default_value' => $c20Val,
				  				  		'#ahah' => array(
				  				  		 'path' => 'routestops/studentlist/ind/ahahjs2',
				  				  		 'wrapper' => 'ahah-wrapper-stugrade',
				  				  		 'method' => 'replace',
				  				  						)
				  );
				  
				  $form['filters']['studentname'] = array('#type' => 'select',
				  				  		'#title' => t('Student Name'),
										'#options' =>  array( '' => t('Select ..') ),
				  				  		'#description' => t('Please Select The Student'),
				  				  		'#disabled' => FALSE,
										'#default_value' => $c30Val,
				  				  	'#prefix' => '<div id = "ahah-wrapper-stugrade">',
				  					'#suffix' => '</div>',
				  				  		
				  );
				  
		

	 $form['filters']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Apply'), 
'#prefix' => '<br/>' 		
	  );
$form[ 'filters' ]['submit']['#attributes']['class']  = $form[ 'filters' ]['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

}



function busroute_student_filter_form_submit($form, &$form_state) {


$_SESSION['t_stugrade'] = $form_state['values']['filters']['stugrade'];
$_SESSION['t_studentname'] = $form_state['values']['filters']['studentname'];

	if(!empty($_SESSION['t_stugrade'])) {

		$stugrade = &$_SESSION['t_stugrade'];
// drupal_set_message(t("Inside of filter1 : $stugrade"));
	} else {

		$stugrade = "";
// drupal_set_message(t("Outside of filter1 : $stugrade"));
	}

	
	if(!empty($_SESSION['t_studentname'])) {

		$studentname = &$_SESSION['t_studentname'];
// drupal_set_message(t("Inside of filter2 : $studentname"));
	} else {

		$studentname = "";
// drupal_set_message(t("outside of filter2 : $studentname"));
	}


  $form_state['redirect'] = 'routestops/studentlist';
  return;
}


function busroute_student_ahah_field_js_for_ind3 () {
//  krumo($form_state);
$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;


		$gid = $form['#post']['filters']['stugrade'];
		db_set_active('qtxt_db');
		$sqlg = " select account_student_map_id,student_name from {qtxt_sms_route_details_v3} where account_grade_id = '$gid' order by substring(student_name,LOCATE('.', student_name)+1) ";

//order by SUBSTRING(student_name, LOCATE('.', student_name)+1)" ;

		$resultg = db_query($sqlg);
		$valueg[''] = 'Select a value';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->account_student_map_id] = $datag->student_name;
		}
		db_set_active('default');
		$form['filters']['studentname']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
		//		$form = form_builder('qtext1_smsform', $form, $form_state);	
               $form = form_builder('v3_route_stops', $form, $form_state);		
		
				$output = $form['filters']['studentname'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));


}



function busroute_student_details($form_state) {
global $user;
$profile =  profile_load_profile($user);
$myMobileNumber =  $user->profile_mobile;  

  $header = array(
    array(),
    array('data' => t('Group Name'), 'field' => 'b.standard'),
    array('data' => t('Group Description'), 'field' => 'b.section'),
	t('Operations'),
  );


// $c30Val = &$_SESSION['t_grade'] ;

$c20Val = &$_SESSION['t_stugrade'] ;
$c30Val = &$_SESSION['t_studentname'] ;

$filterClass20 = "";

    if ( $c20Val != "" ) {

			$filterClass20 = " and b.account_grade_id = '$c20Val' ";
	//		 drupal_set_message(t("Inside of filter : $filterClass20"));
	} 
$filterClass30 = "";

    if ( $c30Val != "" ) {

			$filterClass30 = " and b.account_student_map_id = '$c30Val' ";
	//		 drupal_set_message(t("Inside of filter : $filterClass30"));
	} 

	db_set_active('qtxt_db');	
  $sql = "select account_route_student_map_id,account_student_map_id,student_name,grade_name,route_number,stop_name,route_stop_id from  {qtxt_sms_route_details_v3} b where account_id = 5 "  . $filterClass20 . $filterClass30   ; 
    $query_count = "select COUNT(account_route_student_map_id) from {qtxt_sms_route_details_v3} b where account_id = 5 " . $filterClass20 . $filterClass30 ;
  
   $sql .= tablesort_sql($header);

  $result = pager_query($sql, 1000, 0, $query_count);
  db_set_active('default');


    $form['access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Access log settings'),
    '#tree' => TRUE,
	'#visible' => false,
  );


  $accounts = array();

$i = 1;  
  while ($account = db_fetch_object($result)) {

  $form['access']['account'][$i] = array(
		'#type' => 'checkbox',
		'#return_value' => $account->account_route_student_map_id,
		'#default_value' => 0,
		'#tree' => TRUE,

	  );
  
// $form['access']['sid'][$account->account_route_student_map_id] =  array('#value' => $account->account_route_student_map_id);

 $form['access']['sname'][$account->account_route_student_map_id] =  array('#value' => $account->student_name);

	$form['access']['gname'][$account->account_route_student_map_id] =  array('#value' => $account->grade_name);

	$form['access']['rnum'][$account->account_route_student_map_id] =  array('#value' => $account->route_number);

  $form['access']['stopname'][$account->account_route_student_map_id] =  array('#value' => $account->stop_name);

$form['access']['rid'][$account->account_route_student_map_id] =  array('#value' => $account->route_stop_id);
  
  $form['access']['sid'][$account->account_route_student_map_id] =  array('#type' => 'hidden','#value' => $account->account_route_student_map_id);
   
   $form['access']['operations'][$account->account_route_student_map_id] = array('#value' => l(t('edit'), "routestops/studentlist/edit/$account->account_route_student_map_id", array('query' => $destination)));	


//	$form['access']['operations2'][$account->account_route_student_map_id] = array('#value' => l(t('delete'), "routestops/studentlist/delete/$account->account_route_student_map_id", array('query' => $destination)));	
	$i = $i + 1;
  }
// db_set_active('default');

  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));
  $form['#theme'] = 'student_busroute_theme';   
  $form['totalcount'] = array(
	'#type' => 'hidden', '#default_value' => ($i  -1 )
  );  
  return $form;
}

function theme_student_busroute_theme($form)
{
$rows = array();
$i = 1;

foreach(element_children($form['access']['sid']) as $key) {
	$row = array(); 
//       $row[] =  drupal_render($form['access']['account'][$i]);

       $row[] =  drupal_render($form['access']['sname'][$key]);

       $row[] =  drupal_render($form['access']['gname'][$key]);

	   $row[] =  drupal_render($form['access']['rnum'][$key]);

       $row[] =  drupal_render($form['access']['stopname'][$key]);
 
	   $row[] =  drupal_render($form['access']['operations'][$key]);	
//       $row[] =  drupal_render($form['access']['operations2'][$key]);	   
	$rows[] = $row; 
	$i = $i +1 ;
}


if(count($rows)){
				
				$header = array( ('Student Name'), t('Class'),t('Route'), t('Stop Name') );

				$header[] = array('data' => t('Action'), 'colspan' => 2);
  }
  else{
    $header = array(t('Route Name '), t('Stop Name')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No Students Were Found'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows); 
  $form['access']['#access'] = false;
 return $output . drupal_render($form); 
 return $output ; 
}  


function busroute_student_edit(&$form_state, $fid1) {
		db_set_active('qtxt_db');
// $field = db_fetch_object(db_query("select route_number,route_description,stop_name,stop_description,stop_weight,account_route_id,route_stop_id from  {qtxt_sms_route_details_v3} b WHERE route_stop_id = %d ", $fid1));

$field = db_fetch_object(db_query("select account_route_student_map_id,account_student_map_id,student_name,grade_name,route_number,stop_name,route_stop_id,account_route_id from  {qtxt_sms_route_details_v3} b WHERE account_route_student_map_id = '%s' ", $fid1));

		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
		  $form['account_route_student_map_id'] = array('#type' => 'value',
			'#value' => $fid1,
		  );		  

		$form['userdefinedsname'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter The Student Name'),
			'#title' => t('Student Name'),
			  '#size' => 60,
			  '#maxlength' => 500,
            '#disabled' => TRUE,			  
			'#default_value' => $field->student_name,
		);	

        $form['userdefinedgname'] = array(
			'#type' => 'textfield',
			'#description' => t('Please Enter The Class'),
			'#title' => t('Class'),
			  '#size' => 60,
			  '#maxlength' => 500,
            '#disabled' => TRUE,			  
			'#default_value' => $field->grade_name,
		);			
		
		$form['userdefroutename'] = array(
			'#type' => 'hidden',
			'#description' => t('Please Enter The Class'),
			'#title' => t('Class'),
			  '#size' => 60,
			  '#maxlength' => 500,
            '#disabled' => TRUE,			  
			'#default_value' => $field->route_number,
		);			
		
		$form['userdefstopname'] = array(
			'#type' => 'hidden',
			'#description' => t('Please Enter The Grade'),
			'#title' => t('Grade'),
			  '#size' => 60,
			  '#maxlength' => 500,
                        '#disabled' => TRUE,			  
			'#default_value' => $field->stop_name,
               //         '#suffix' => '<br/><br/><br/><br/>',
		);			
		
	drupal_set_message(t("Previously Selected Route Name :  $field->route_number"));
    drupal_set_message(t("Previously Selected Stop Name :  $field->stop_name"));
 
  db_set_active('qtxt_db');	

//  $varroutenum	= $field->route_number;
// drupal_set_message(t("var Route Id :  $varroutenum"));
     	  
	  $resultg1 = db_query("SELECT account_route_id,route_number FROM {qtxt_sms_account_routes} a, {qtxt_sms_account} b where a.account_id = b.account_id  and a.account_id = 5 ");
				  $igradeOptions = array('' => t('Select..'));
	//			  $igradeOptions = array('#default_value' => $field->route_number);
	//  $igradeOptions = '#default_value' => $field->route_number;

				  while ($rowg1 = db_fetch_object($resultg1)) {
				  	$igradeOptions[$rowg1->account_route_id ] =  $rowg1->route_number; //This is the only line that changed from the code above.
				  	}
				
				db_set_active('default');
				  $form['userdefinedrnum'] = array('#type' => 'select',
				  				  		'#options' => $igradeOptions,
				  				  		'#title' => t('Route Name'),
				  				  		'#description' => t('Please Select Route'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
									  //  '#default_value' => $field->route_number,
				  				  		'#ahah' => array(
				  				  		 'path' => 'routestops/studentlist/edit/ind/ahahjs3',
				  				  		 'wrapper' => 'ahah-wrapper-userdefinedrnum',
				  				  		 'method' => 'replace',
				  				  						)
																	
														 
				  );
				  
				  $form['userdefinedstopname'] = array('#type' => 'select',
				  				  		'#title' => t('Stop Name'),
										'#options' =>  array( '' => t('Select ..') ),
				  				  		'#description' => t('Please Select Stop'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
                                                                   		'#default_value' => $field->stop_name,
				  				  	'#prefix' => '<div id = "ahah-wrapper-userdefinedrnum">',
				  					'#suffix' => '</div>',
				  				  		
				  );
				  
				  
		$form['userdefinedstuidentifier'] = array(
			'#type' => 'hidden',
	//	'#type' => 'textfield',
			'#default_value' => $field->account_route_student_map_id,				  
		);
		
		$form['userdefinedstumapid'] = array(
			'#type' => 'hidden',
	//	'#type' => 'textfield',
			'#default_value' => $field->account_student_map_id,				  
		);
	
/*
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Submit'),  
'#prefix' => '<br/>',                                               
	  );
 $form['buttons']['submit1'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );
*/
 return confirm_form($form, t('<a href="@edit-field"></a> ', array('@edit-field' => url('routestops/studentlist'))),t('routestops/studentlist'));

$form['buttons']['#attributes']['class']  = $form['buttons']['#attributes']['class'] . ' qbsubmit20';

	return $form;
		


}


function busroute_student_edit_stops_ahah_field_js_for_ind3 () {
//  krumo($form_state);
$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;


		$gid = $form['#post']['userdefinedrnum'];
		db_set_active('qtxt_db');
		$sqlg = " select route_stop_id,stop_name from {qtxt_sms_route_stops} where account_route_id = $gid order by stop_weight";

//order by SUBSTRING(student_name, LOCATE('.', student_name)+1)" ;

		$resultg = db_query($sqlg);
		$valueg[''] = 'Select a value...';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->route_stop_id] = $datag->stop_name;
		}
		db_set_active('default');
		$form['userdefinedstopname']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
				 $form = form_builder('v3_route_stops', $form, $form_state);		
				$output = $form['userdefinedstopname'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));


}




function busroute_student_edit_submit ($form, &$form_state) {
$op = $form_state['values']['op'];
 // drupal_set_message(t("$op"));  
	if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'routestops/studentlist';
		  return;	
	} 
	

		
	$studentIdentifier = $form_state['values']['account_route_student_map_id'];
	
	$userdefinedsname = $form_state['values']['userdefinedsname'];
	$userdefinedgname = $form_state['values']['userdefinedgname'];
	$userdefinedrnum = $form_state['values']['userdefinedrnum'];
	$userdefinedstopname = $form_state['values']['userdefinedstopname'];
	$userdefinedstopid = $form_state['values']['userdefinedstopid'];
	$userdefinedstuidentifier = $form_state['values']['userdefinedstuidentifier'];
	$userdefinedstumapid = $form_state['values']['userdefinedstumapid'];
	$userdefinedrouteid= $form_state['values']['userdefinedrouteid'];
/* 
 //   drupal_set_message(t("Student Name : $userdefinedsname"));
   //   drupal_set_message(t("Grade Name : $userdefinedgname"));
      drupal_set_message(t("Route Id : $userdefinedrnum"));
	  drupal_set_message(t("Stop Id : $userdefinedstopname"));
	  drupal_set_message(t("Stop Name : $userdefinedstopid"));
	   drupal_set_message(t("Route Name : $userdefinedstopid"));
      drupal_set_message(t("Route Student Id  : $userdefinedstuidentifier"));
	  drupal_set_message(t("Student Map Id  : $userdefinedstumapid"));
  //    drupal_set_message(t("Route Id :  $userdefinedrouteid"));
     
*/	

    $userdefinedsname = str_replace("'", "''", $userdefinedsname);
	$userdefinedgname = str_replace("'", "''", $userdefinedgname);		
 //   $userdefinedrnum = str_replace("'", "''", $userdefinedrnum);
//	$userdefinedstopname = str_replace("'", "''", $userdefinedstopname);

			
		db_set_active('qtxt_db');
		
	db_query("UPDATE {qtxt_sms_account_route_student_map} SET `account_route_id` = '%d',`last_update_date` = sysdate(),`last_updated_by` = 'School Admin',`route_stop_id` = '%d' WHERE `account_route_student_map_id` = '%d' and `account_student_map_id` = '%d'",$userdefinedrnum, $userdefinedstopname, $userdefinedstuidentifier, $userdefinedstumapid);
	
			
		db_set_active('default');

		drupal_set_message(t('The Routes And Stops has been updated.', array('%field' => $form_state['values']['userdefinedstuidentifier'])));
		$form_state['redirect'] = 'routestops/studentlist';
		return;
}




function busroute_studentlist_delete(&$form_state, $fid1) {


  
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("select account_route_student_map_id,student_name,grade_name,route_number,stop_name,route_stop_id from  {qtxt_sms_route_details_v3} b WHERE account_route_student_map_id = '%s' ", $fid1));
		
		
		
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }

		  $form['delaccroutestudid'] = array('#type' => 'value', '#value' => $fid1);
		  $form['delstudname'] = array('#type' => 'value', '#value' => $field->student_name);
	//	  $form['delstugrade'] = array('#type' => 'value', '#value' => $field->grade_name);
		  $form['delsturoutename'] = array('#type' => 'value', '#value' => $field->route_number);
		  $form['delstustopname'] = array('#type' => 'value', '#value' => $field->stop_name);
		 // $form['groupdesc'] = array('#type' => 'value', '#value' => $field->group_description);

		  return confirm_form($form,
			t('Are you sure you want to delete the Student -  %field  defined for the Route %field2 and Stop %field3 ?', array('%field' => $field->student_name, '%field2' => $field->route_number, '%field3' => $field->stop_name)), 'routestops/studentlist/',
			t('This action cannot be undone.  If you want to keep the user-entered data, instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('routestops/studentlist/edit/'. $fid1))),
			t('Delete'), t('Cancel'));
			
			
			
		}


function busroute_studentlist_delete_submit($form, &$form_state) {
		db_set_active('qtxt_db');
//		db_query('DELETE FROM {cce_assesment_cat_det_descriptor} WHERE assessment_cat_det_descriptor_id = %d', $form_state['values']['scholdescid']);
		db_query('DELETE FROM {qtxt_sms_account_route_student_map} WHERE account_route_student_map_id = %d', $form_state['values']['delaccroutestudid']);
		db_set_active('default');
		cache_clear_all();

		drupal_set_message(t('The Student %field has been deleted.', array('%field' => $form_state['values']['delstudname'])));
  //			unset ( $_SESSION['t_stuname'] );
  //		unset ( $_SESSION['scholAccountGradeId'] );
  //		unset ( $_SESSION['scholAssessmentName'] );
  //		unset ( $_SESSION['scholAssessmentCategory'] );
		
		$form_state['redirect'] = 'routestops/studentlist';
		return;
}




function busroute_studentlist_create() {

$form['adminOuter'] = array(
						'#type' => 'fieldset',
						'#title' => t(' Filter Criteria'),
						'#collapsible' => FALSE, 
						'#collapsed' => FALSE,
						'#tree' => TRUE
	  );
				  

	  db_set_active('qtxt_db');	

	  
	  $resultg1 = db_query("SELECT account_grade_id,grade_name FROM {qtxt_sms_account_grades} a, {qtxt_sms_account} b where   a.account_id = b.account_id and section != 'ALL' and a.account_id = 5 order by class_weight ");
				  $igradeOptions = array('' => t('Select..'));
				  while ($rowg1 = db_fetch_object($resultg1)) {
				  	$igradeOptions[$rowg1->account_grade_id ] =  $rowg1->grade_name; //This is the only line that changed from the code above.
				  	}
				db_set_active('default');
				  $form['adminOuter']['grade'] = array('#type' => 'select',
				  				  		'#options' => $igradeOptions,
				  				  		'#title' => t('Class'),
				  				  		'#description' => t('Please Select The Class'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  		'#ahah' => array(
				  				  		 'path' => 'routestops/studentlist_create/ind/ahahjs2',
				  				  		 'wrapper' => 'ahah-wrapper-grade',
				  				  		 'method' => 'replace',
				  				  						)
				  );
				  
				  $form['adminOuter']['student'] = array('#type' => 'select',
				  				  		'#title' => t('Student Name'),
										'#options' =>  array( '' => t('Select ..') ),
				  				  		'#description' => t('Please Select The Student'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  	'#prefix' => '<div id = "ahah-wrapper-grade">',
				  					'#suffix' => '</div>',
				  				  		
				  );
		
		
			  db_set_active('qtxt_db');	

	  
	  $resultg1 = db_query("SELECT account_route_id,route_number FROM {qtxt_sms_account_routes} a, {qtxt_sms_account} b where   a.account_id = b.account_id  and a.account_id = 5 and route_type = 'inbound' ");
				  $igradeOptions = array('' => t('Select..'));
				  while ($rowg1 = db_fetch_object($resultg1)) {
				  	$igradeOptions[$rowg1->account_route_id ] =  $rowg1->route_number; //This is the only line that changed from the code above.
				  	}
				db_set_active('default');
				  $form['adminOuter']['routename'] = array('#type' => 'select',
				  				  		'#options' => $igradeOptions,
				  				  		'#title' => t('From Route'),
				  				  		'#description' => t('Please Select From Route'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  		'#ahah' => array(
				  				  		 'path' => 'routestops/studentlist_create/from/ind/ahahjs3',
				  				  		 'wrapper' => 'ahah-wrapper-routename',
				  				  		 'method' => 'replace',
				  				  						)
				  );
				  
				  $form['adminOuter']['stopname'] = array('#type' => 'select',
				  				  		'#title' => t('From Stop'),
										'#options' =>  array( '' => t('Select ..') ),
				  				  		'#description' => t('Please Select From Stop'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  	'#prefix' => '<div id = "ahah-wrapper-routename">',
				  					'#suffix' => '</div>',
				  				  		
				  );
				  
				  			  db_set_active('qtxt_db');	

	  
	  $resultg1 = db_query("SELECT account_route_id,route_number FROM {qtxt_sms_account_routes} a, {qtxt_sms_account} b where   a.account_id = b.account_id  and a.account_id = 5 and route_type = 'outbound' ");
				  $igradeOptions = array('' => t('Select..'));
				  while ($rowg1 = db_fetch_object($resultg1)) {
				  	$igradeOptions[$rowg1->account_route_id ] =  $rowg1->route_number; //This is the only line that changed from the code above.
				  	}
				db_set_active('default');
				  $form['adminOuter']['troutename'] = array('#type' => 'select',
				  				  		'#options' => $igradeOptions,
				  				  		'#title' => t('To Route'),
				  				  		'#description' => t('Please Select To Route'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  		'#ahah' => array(
				  				  		 'path' => 'routestops/studentlist_create/to/ind/ahahjs4',
				  				  		 'wrapper' => 'ahah-wrapper-troutename',
				  				  		 'method' => 'replace',
				  				  						)
				  );
				  
				  $form['adminOuter']['tstopname'] = array('#type' => 'select',
				  				  		'#title' => t('To Stop'),
										'#options' =>  array( '' => t('Select ..') ),
				  				  		'#description' => t('Please Select To Stop'),
				  				  		'#disabled' => FALSE,
										'#required' => TRUE,
				  				  	'#prefix' => '<div id = "ahah-wrapper-troutename">',
				  					'#suffix' => '</div>',
				  				  		
				  );

		
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Submit'), 
'#prefix' => '<br/><br/>' 		
	  );
$form[ 'buttons' ]['submit']['#attributes']['class']  = $form[ 'buttons' ]['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

		
}

function busroute_studentlist_create_submit($form, &$form_state) {


		  
   $op = $form_state['values']['op'];
  
//	$routename = $form_state['values']['rname'];
//	$totalrows =  $form_state['values']['numrows'];

	$grade = $form_state['values']['adminOuter']['grade'];
	$student = $form_state['values']['adminOuter']['student'];
    $routename = $form_state['values']['adminOuter']['routename'];
	$stopname = $form_state['values']['adminOuter']['stopname'];
    $troutename = $form_state['values']['adminOuter']['troutename'];
	$tstopname = $form_state['values']['adminOuter']['tstopname'];
	
	db_set_active('qtxt_db');	
	
			$resultnsStudentname = db_query("SELECT student_name from qtxt_sms_account_student_map where account_student_map_id = $student ");

     $sStudentname = array( );
	while ( $row = db_fetch_object( $resultnsStudentname ) ) {
		$sStudentname = $row->student_name;
	}
				
					
	
 db_query( "INSERT INTO `qtxt_sms_account_route_student_map`(`account_route_student_map_id`,`account_route_id`,`account_student_map_id`,`account_id`,`creation_date`,`last_update_date`,`created_by`,`last_updated_by`,`route_stop_id`)VALUES(null,$routename,$student,5,sysdate(),sysdate(),'School Admin','School Admin',$stopname)" ); 

 db_query( "INSERT INTO `qtxt_sms_account_route_student_map`(`account_route_student_map_id`,`account_route_id`,`account_student_map_id`,`account_id`,`creation_date`,`last_update_date`,`created_by`,`last_updated_by`,`route_stop_id`)VALUES(null,$troutename,$student,5,sysdate(),sysdate(),'School Admin','School Admin',$tstopname)" ); 
						
db_query( "UPDATE `qtxt_sms_account_student_map` SET `route_active_flag` = 'Y' WHERE account_student_map_id = $student " ); 
	


   db_set_active('default');	
/*
	  drupal_set_message(t("Grade : $grade"));
      drupal_set_message(t("Student name : $student"));
      drupal_set_message(t("From Route : $routename"));
	  drupal_set_message(t("From Stop : $stopname"));
	  drupal_set_message(t("To Route : $troutename"));
	  drupal_set_message(t("To Stop : $tstopname"));
//	  drupal_set_message(t("Grade name : $sGradename "));
*/
	drupal_set_message(t("Your Student $sStudentname Details have been inserted successfully."));	

 
		  $form_state['redirect'] = 'routestops/studentlist_create';
		  return;
}




function busroute_studentlist_ahah_field_js_for_ind2 () {
//  krumo($form_state);
$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;


		$gid = $form['#post']['adminOuter']['grade'];
		db_set_active('qtxt_db');
		$sqlg = " select account_student_map_id,student_name from {qtxt_sms_mobile_students_v} where account_grade_id = $gid and route_active_flag = 'N' order by substring(student_name , LOCATE('.', student_name)+1)";

//order by SUBSTRING(student_name, LOCATE('.', student_name)+1)" ;

		$resultg = db_query($sqlg);
		$valueg[''] = 'Select a value';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->account_student_map_id] = $datag->student_name;
		}
		db_set_active('default');
		$form['adminOuter']['student']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
				$form = form_builder('v3_route_stops', $form, $form_state);		
				$output = $form['adminOuter']['student'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));


}


function busroute_student_from_stops_ahah_field_js_for_ind3 () {
//  krumo($form_state);
$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;


		$gid = $form['#post']['adminOuter']['routename'];
		db_set_active('qtxt_db');
		$sqlg = " select route_stop_id,stop_name from {qtxt_sms_route_stops} where account_route_id = $gid order by stop_weight";

//order by SUBSTRING(student_name, LOCATE('.', student_name)+1)" ;

		$resultg = db_query($sqlg);
		$valueg[''] = 'Select a value';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->route_stop_id] = $datag->stop_name;
		}
		db_set_active('default');
		$form['adminOuter']['stopname']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
				 $form = form_builder('v3_route_stops', $form, $form_state);		
				$output = $form['adminOuter']['stopname'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));


}
function busroute_student_to_stops_ahah_field_js_for_ind4 () {
//  krumo($form_state);
$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;


		$gid = $form['#post']['adminOuter']['troutename'];
		db_set_active('qtxt_db');
		$sqlg = " select route_stop_id,stop_name from {qtxt_sms_route_stops} where account_route_id = $gid order by stop_weight";

//order by SUBSTRING(student_name, LOCATE('.', student_name)+1)" ;

		$resultg = db_query($sqlg);
		$valueg[''] = 'Select a value';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->route_stop_id] = $datag->stop_name;
		}
		db_set_active('default');
		$form['adminOuter']['tstopname']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
				 $form = form_builder('v3_route_stops', $form, $form_state);		
				$output = $form['adminOuter']['tstopname'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));


}
