<?php







function v3_cce_categories_views_api() {

  return array(

    'api' => 2,

    'path' => drupal_get_path('module', 'v3_cce_categories'),

  );

}





function v3_cce_categories_help($path, $arg) {

  global $user;



  switch ($path) {

    case 'categories':

      return '<p>'. t('Categories helps to define assessment type,For example - Class 9th and Class 10th have one pattern and Class 6th through Class 8th have different pattern.') .'</p>';

	

	}

  

}  

function v3_cce_categories_menu() {

	$items['categories'] = array(

    'title' => 'CCE - Define Exam Categories',

    'description' => 'List, add, and edit Categories.',

    'page callback' => 'cce_categories',

    'page arguments' => array('list'),

   // 'access arguments' => array('administer users'),

	'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),
	

	);




  $items['categories/list'] = array(

    'title' => 'List',

    'type' => MENU_DEFAULT_LOCAL_TASK,
'access callback' => 'user_access',
'access arguments' => array('access content'),


    'weight' => -10,

  );

  $items['categories/create'] = array(

    'title' => 'Add Exam Categories',

    'page arguments' => array('create'),

   // 'access arguments' => array('administer users'),

    'type' => MENU_LOCAL_TASK,
'access callback' => 'user_access',
'access arguments' => array('access content'),


  );	

  

  $items['categories/edit'] = array(

    'title' => 'Edit field',

    'page callback' => 'drupal_get_form',

    'page arguments' => array('categories_edit'),

   // 'access arguments' => array('administer users'),

    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),


  );

  $items['categories/delete'] = array(

    'title' => 'Delete Categories',

    'page callback' => 'drupal_get_form',

    'page arguments' => array('categories_delete'),

    'access arguments' => array('administer users'),

    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),


  );  

return $items;

}



function categories_edit(&$form_state, $fid) {

		db_set_active('qtxt_db');

		$field = db_fetch_object(db_query("SELECT assessment_category_code,assessment_category_desc FROM cce_assesment_categories
where assessment_category_code = '%s' ",$fid));

		db_set_active('default');



		if (!$field) {

			drupal_not_found();

			return;

		  }

		  
		$form['edit']['categoryname'] = array(

		  '#title' => 'Category Name',

		  '#type' => 'textfield',

		  '#size' => 60,

		  '#maxlength' => 200,

		  '#required' => true,

		  '#default_value' => $field->assessment_category_code,

		);



		$form['edit']['categorydesc'] = array(

		  '#title' => 'Category Desc ',

		  '#type' => 'textfield',

		  '#size' => 120,

		  '#maxlength' => 500,

		  '#default_value' => $field->assessment_category_desc,

		);





	 $form['edit']['buttons']['submit'] = array(                                                          

		'#type' => 'submit',

		'#value' => t('Edit Category'), 

                '#prefix' => '<br/><br/><br/><br/><br/><br/>',                                                

	  );
	  $form['edit']['buttons']['cancel'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );


        $form['edit']['buttons']['submit']['#attributes']['class']  = $form['edit']['buttons']['submit']['#attributes']['class'] . ' qbsubmit';


	return $form;



}
function categories_edit_validate ($form, &$form_state) {
$op = $form_state['values']['op'];
  
	if ( $op == "Cancel" ) {
		  return;	
	} 
	
   
$cname = $form_state['values']['categoryname'];
// drupal_set_message(t("Catergory $cname"));
// $cdesc = $form_state['values']['categorydesc'];
if ( $cname == "") {
		form_set_error('', t('Category field is required.'));
	}			
	
	$cname = trim(strtoupper($cname));

 db_set_active('qtxt_db');
$field = db_fetch_object(db_query("SELECT assessment_category_code FROM cce_assesment_categories  where upper(assessment_category_code)!= '$cname' "));
// $catecode=$field->assessment_category_code;
db_set_active('default');
if($field)
{
form_set_error('', t('Code has already exists, Give some other code'));
        
}


}



function categories_edit_submit ($form, &$form_state) {
 
 $op = $form_state['values']['op'];
 if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'categories/list';
		  return;	
	} 


		

	// $groupId = $form_state['values']['groupid'];

	$cname = $form_state['values']['categoryname'];

	$cdesc = $form_state['values']['categorydesc'];

		db_set_active('qtxt_db');

			$cname = str_replace("'", "''", $cname);
			$cdesc = str_replace("'", "''", $cdesc);

			

		db_query("update {cce_assesment_categories} set assessment_category_code = '%s', assessment_category_desc = '%s' 
		WHERE assessment_category_code = '%s'",$cname,$cdesc,$cname);

		

		db_set_active('default');



		drupal_set_message(t('The Category Name %field has been updated.', array('%field' => $form_state['values']['categoryname'])));



		cache_clear_all();

  		unset ( $_SESSION['group_filter_value'] );



		$form_state['redirect'] = 'categories/list';

		return;

}



function categories_delete(&$form_state,$fid) {
 

		db_set_active('qtxt_db');

		$field = db_fetch_object(db_query("SELECT assessment_category_code,assessment_category_desc FROM {cce_assesment_categories}
		where assessment_category_code = '%s' ",$fid));

		db_set_active('default');



		if (!$field) {

			drupal_not_found();

			return;

		  }



		 // $form['groupid'] = array('#type' => 'value', '#value' => $fid);

		  $form['categorycode'] = array('#type' => 'value', '#value' => $field->assessment_category_code);

		  $form['categorydesc'] = array('#type' => 'value', '#value' => $field->assessment_category_desc);



		  return confirm_form($form,

			t('Are you sure you want to delete the Group Name %field?', array('%field' => $field->assessment_category_code)), 'categories',

			t('This action cannot be undone.  If you want to keep the user-entered data, 

			instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('categories/edit/'. $fid))),

			t('Delete'), t('Cancel'));

		}



/**

 * Process a field delete form submission.

 */

function categories_delete_submit($form, &$form_state) {
 $ccode = $form_state['values']['categorycode'];
 // drupal_set_message(t("code $ccode"));

		db_set_active('qtxt_db');
		// 'DELETE FROM {cce_groups} WHERE group_id = %d', $form_state['values']['groupid']

		$result = db_query("DELETE FROM {cce_assesment_categories} WHERE assessment_category_code = '$ccode' ");

		  db_set_active('default');

		cache_clear_all();
		
		



		drupal_set_message(t('The Group Name  %field has been deleted.', array('%field' => $form_state['values']['categorycode'])));

  		unset ( $_SESSION['group_filter_value'] );

		$form_state['redirect'] = 'categories/list';

		return;

}

function categories_delete_validate($form, &$form_state) {
$op = $form_state['values']['op'];
$ccode = $form_state['values']['categorycode'];
	db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT assessment_category_code FROM {cce_assesment_types} WHERE  assessment_category_code= '$ccode'"));
	
		db_set_active('default');

		if ($field) {
				form_set_error('', t('You cant able to delete this Category, since assessment were already defined to this category'));
		}	
}





function cce_categories($callback_arg = '') {

/*

        $output = drupal_get_form('group_filter_form');

        $output .= drupal_get_form('group_details');

  return $output;

  */

  

  $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;



//  drupal_set_message("Operamd - $op ");	

  

  switch ($op) {

    case t('Create Category'):

    case 'create':
	case 'Cancel':

      $output = drupal_get_form('category_create');

      break;



	  default:

      if (!empty($_POST['categories']) && isset($_POST['operation']) && ($_POST['operation'] == 'delete')) {

        $output = drupal_get_form('group_multiple_delete_confirm');

      }

      else {

        $output = drupal_get_form('category_filter_form');

        $output .= drupal_get_form('category_details');

      }

  }

  return $output;

  

}



function category_create() {



		$form['create']['categoryname'] = array(

		  '#title' => 'Category Name ',

		  '#type' => 'textfield',

		  '#size' => 60,

		  '#maxlength' => 200,

		 //  '#required' => true,

		);



		$form['create']['categorydesc'] = array(

		  '#title' => 'Category Desc ',

		  '#type' => 'textfield',

		  '#size' => 120,

		  '#maxlength' => 500,

		);
              $form['create']['rcsection'] = array(

		  '#title' => 'Record Section ',

		  '#type' => 'textfield',

		  '#size' => 120,

		  '#maxlength' => 500,

		);

$form['create']['status'] = array(
      '#type' => 'select',
'#title' => 'Scholostic Status',

      '#options' => array(
				  'Y' => 'Y',
				  'N' => 'N',
				  
				),
				
    );










	 $form['create']['buttons']['submit'] = array(                                                          

		'#type' => 'submit',

		'#value' => t('Create Category'),  

                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/><br/><br/>',
                                               
	  );
	   $form['create']['buttons']['cancel'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );


$form['create']['buttons']['submit']['#attributes']['class']  = $form['create']['buttons']['submit']['#attributes']['class'] . ' qbsubmit';


	return $form;



}

function category_create_validate ($form, &$form_state) {
 $op = $form_state['values']['op'];
  
	if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'categories/list';
		  return;	
	} 

	$cname = $form_state['values']['categoryname'];
    $cdesc = $form_state['values']['categorydesc'];

	if ( $cname == "") {
		form_set_error('', t('Category Name  field is required.'));
	}		
	
	$cname = trim(strtoupper($cname));

	
	
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT assessment_category_code,assessment_category_desc FROM cce_assesment_categories 
where assessment_category_code = '%s' ",$cname));
db_set_active('default');

		if ($field) {
				form_set_error('', t('Category already exists'));
		}	
	
}





function category_create_submit($form, &$form_state) {		  

   $op = $form_state['values']['op'];
if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'categories/list';
		  return;	
	} 
	
	$cname = $form_state['values']['categoryname'];
	$cdesc = $form_state['values']['categorydesc'];
$rsec = $form_state['values']['rcsection'];
	$status = $form_state['values']['status'];

//	drupal_set_message("Group Name - $groupName ");	

		db_set_active('qtxt_db');



			$cname = str_replace("'", "''", $cname);

			$cdesc = str_replace("'", "''", $cdesc);

		

			$result = db_query( "INSERT INTO `cce_assesment_categories` 
 (`assessment_category_code`,`assessment_category_desc`,`creation_date`,`update_date`,`created_by`,  `updated_by`,`rc_section`,`scholastic_flag`) 

			VALUES  ('$cname',  '$cdesc',  sysdate(),  sysdate(),  'admin',  'admin','$rsec','$status' )");

		db_set_active('default');

			drupal_set_message(t("Category has been Created."));	



			unset ( $_SESSION['group_filter_value'] );

			

		  $form_state['redirect'] = 'categories/list';

		  return;



}







/**

 * Form builder; Return form for user administration filters.

 *

 * @ingroup forms

 * @see user_filter_form_submit()

 */

function category_filter_form() {



			

	 $i = 0;

	  $form['filters'] = array(

		'#type' => 'fieldset',

		'#title' => t('Show only Categories where'),



	  );



		db_set_active('qtxt_db');	



		$result = db_query("select assessment_category_desc from {cce_assesment_categories}  order by assessment_category_desc" );



		$options = array('' => t('Select..'));



		$c2Val = "";

		if(!empty($_SESSION['group_filter_value'])) {

			$c2Val = &$_SESSION['group_filter_value'];
// drupal_set_message(t("filter $c2Val"));
		} else {

			$c2Val = "";

		}

		

		while ($row = db_fetch_object($result)) {

				$options[$row->assessment_category_desc ] =  $row->assessment_category_desc; 

		}



		db_set_active('default');	 

		



		$form['filters']['group'] = array(

		  '#title' => 'Category Description  like ',

		  '#type' => 'textfield',

		  '#size' => 60,

		  '#maxlength' => 128,

		  '#default_value' => $c2Val,

		);







	 $form['filters']['buttons']['submit'] = array(                                                          

		'#type' => 'submit',

		'#value' => t('Filter'),

                '#prefix' => '<br/>',                                                 

	  );

$form['filters']['buttons']['submit']['#attributes']['class']  = $form['filters']['buttons']['submit']['#attributes']['class'] . ' qbsubmit';


	return $form;



}







function category_filter_form_submit($form, &$form_state) {

  $op = $form_state['values']['op'];

//  drupal_set_message("Filter Form Submit Operamd - $op ");	  

  switch ($op) {

    case t('Filter'): 





      if (isset($form_state['values']['group'])) {

		//	drupal_set_message(t("In the Filter, Class  selected"));	 	  

			$filter = $form_state['values']['group'];

			$_SESSION['group_filter_value'] = $form_state['values']['group'];

	  }

	  

      break;

  }

  

  $form_state['redirect'] = 'categories/list';

  return;

}







function category_details($form_state) {

global $user;

$profile =  profile_load_profile($user);

$myMobileNumber =  $user->profile_mobile;  

  $header = array(

    array(),

    array('data' => t('Category Code'), 'field' => 'b.assessment_category_code'),

    array('data' => t('Category Description'), 'field' => 'b.assessment_category_desc'),

	t('Operations'),

  );



$clVal = &$_SESSION['group_filter_value'] ;

 // drupal_set_message(t("Class Filter 1 - $clVal"));	



  

$filterClass = "";

    if ( $clVal != "" ) {

		$clVal = strtoupper($clVal);

			$filterClass = " and upper(b.assessment_category_desc) like '%$clVal%' ";
			 // drupal_set_message(t("Class Filter 1 - $filterClass"));	

			

	} else {
		$filterClass = " and b.assessment_category_desc = b.assessment_category_desc";
		// drupal_set_message(t("Class $filterClass"));

			
	}



  db_set_active('qtxt_db');	

  $sql = "select b.assessment_category_code, b.assessment_category_desc,b.rc_section,b.scholastic_flag from  {cce_assesment_categories} b  where 1 = 1  " . $filterClass  ." order by 1 , 2 " ; 

    $query_count = "select COUNT(b.assessment_category_code) from  {cce_assesment_categories} b  where 1 = 1 " . $filterClass  ;



  

   $sql .= tablesort_sql($header);



  $result = pager_query($sql, 1000, 0, $query_count);

  db_set_active('default');



/*  

  $form['options'] = array(

    '#type' => 'fieldset',

    '#title' => t('Group Information'),

    '#prefix' => '<div class="container-inline">',

    '#suffix' => '</div>',

  );

  

  $form['options']['submit'] = array(

//    $form['submit'] = array(

    '#type' => 'submit',

    '#value' => t('Next'),



  );

*/





    $form['access'] = array(

    '#type' => 'fieldset',

    '#title' => t('Access log settings'),

    '#tree' => TRUE,

	'#visible' => false,

  );





  $accounts = array();



$i = 1;  

  while ($account = db_fetch_object($result)) {



  $form['access']['account'][$i] = array(

		'#type' => 'checkbox',

		'#return_value' => $account->assessment_category_code,

		'#default_value' => 0,

		'#tree' => TRUE,



	  );

    $form['access']['cname'][$account->assessment_category_code] = array('#value' => $account->assessment_category_code);

    $form['access']['cdesc'][$account->assessment_category_code] =  array('#value' => $account->assessment_category_desc);

	$form['access']['rsection'][$account->assessment_category_code] =  array('#value' => $account->rc_section);

      $form['access']['flag'][$account->assessment_category_code] =  array('#value' => $account->scholastic_flag);

    $form['access']['operations'][$account->assessment_category_code] = array('#value' => l(t('edit'), "categories/edit/$account->assessment_category_code", array('query' => $destination)));	

	$form['access']['operations2'][$account->assessment_category_code] = array('#value' => l(t('delete'), "categories/delete/$account->assessment_category_code", array('query' => $destination)));	

	$i = $i + 1;

  }

// db_set_active('default');



  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));

  $form['#theme'] = 'category_description_theme';   

  $form['totalcount'] = array(

	'#type' => 'hidden', '#default_value' => ($i  -1 )

  );  

  return $form;

}



function v3_cce_categories_theme() {

	return array(

		'category_description_theme' => array('arguments'=> array('form' => NULL),),

	);

}



function theme_category_description_theme($form)

{

$rows = array();

$i = 1;

foreach(element_children($form['access']['cname']) as $key) {

	$row = array(); 

//       $row[] =  drupal_render($form['access']['account'][$i]);

       $row[] =  drupal_render($form['access']['cname'][$key]);

       $row[] =  drupal_render($form['access']['cdesc'][$key]);
	   
	   $row[] =  drupal_render($form['access']['rsection'][$key]);
  $row[] =  drupal_render($form['access']['flag'][$key]);

       $row[] =  drupal_render($form['access']['operations'][$key]);	   

       $row[] =  drupal_render($form['access']['operations2'][$key]);	   

	$rows[] = $row; 

	$i = $i +1 ;

}



if(count($rows)){

//			$header = array( theme('table_select_header_cell'), t('Category Code'), t('Category Description'), t('Group Id') );

				$header = array(  t('Category Name'), t('Category Desc'),t('Record Section'),t('Scholastic Flag'));

				

				  $header[] = array('data' => t('Operations'), 'colspan' => 2);

  }

  else{

    $header = array(t('Category Name'), t('Category description')); 

    $row = array();

    $row[] = array

    (

      'data' => t('No Categories were found'),

      'colspan' => 2,

      'style' => 'text-align:center'

    );

    $rows[] = $row;

  }

$output = theme('table', $header, $rows); 

//$output .= drupal_render($form['options']); 

// $output .= drupal_render($form['options']['submit']); 

  $form['access']['#access'] = false;

 return $output . drupal_render($form); 

 return $output ; 

}  











