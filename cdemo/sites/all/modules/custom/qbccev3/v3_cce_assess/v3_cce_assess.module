<?php


function v3_cce_assess_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'v3_cce_assess'),
  );
}


function v3_cce_assess_help($path, $arg) {
  global $user;

  switch ($path) {
    case 'assess':
      return '<p>'. t('Can define the number of assessments or exams required for the current academic year.  ') .'</p>';
	
	}
  
}  
function v3_cce_assess_menu() {
	$items['assess'] = array(
    'title' => 'CCE - Define Assessments',
    'description' => 'List, add, and edit Assessments.',
    'page callback' => 'cce_assess',
    'page arguments' => array('list'),
    // 'access arguments' => array('administer users'),
	'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),
	
	);

  $items['assess/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
'access callback' => 'user_access',
'access arguments' => array('access content'),

    'weight' => -10,
  );
  $items['assess/create'] = array(
    'title' => 'Add Assessment Type',
    'page arguments' => array('create'),
    // 'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
'access callback' => 'user_access',
'access arguments' => array('access content'),

  );	
  
  $items['assess/edit'] = array(
    'title' => 'Edit Assessment Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('assess_edit'),
 //   'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),

  );
  $items['assess/delete'] = array(
    'title' => 'Delete Assessment Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('assess_delete'),
  //  'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
'access arguments' => array('access content'),

  );  

	
 $items['assess/year/ahahjs2'] = array(
        'page callback' => 'ahah_for_year_to_derive_term',
        'type' => MENU_CALLBACK,
		'access callback' => 'user_access',
		 'access arguments' => array('access content'),	
  );
	  
  
return $items;
}

function assess_edit(&$form_state, $fid) {
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT year_id, term_id, group_id, assessment_category_code, 
assessment_name, academic_weighting_percentage, period, grading_type_id, ordering_sequence, assessment_type_code FROM {cce_assesment_types_v} WHERE assessment_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
		  $form['assessment_id'] = array('#type' => 'value',
			'#value' => $fid,
		  );		  



// get the list of active Year

		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT year_id, concat( year_from, ' - ', year_to) year_desc FROM {cce_year} a where
		a.active_flag = 'Y'");
		$yearOptions = array( '' => t('Select the Year') );
		while ($row = db_fetch_object($result1)){
		  $yearOptions[$row->year_id ] = $row->year_desc; 
		}
		db_set_active('default');	


		$form['year'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Year'),
			'#options'=> $yearOptions,
			'#title' => t('Year'),
			'#disabled' => FALSE,
			'#default_value' => $field->year_id,
		);


		db_set_active('qtxt_db');	
		$result1 = db_query("select concat(term_name, ' - ' , term_description) term, term_id  from {cce_term} where year_id = $field->year_id");
		$termOptions = array( );
		while ($row = db_fetch_object($result1)){
		  $termOptions[$row->term_id ] = $row->term; 
		}
		db_set_active('default');	
		
		
		 $form['terms'] = array(
				'#type' => 'select',
				'#title' => t('Terms'),
				'#options' =>  $termOptions,
				'#description' => t('Please select the Term'),
				'#default_value' => $field->term_id,
				'#disabled' => FALSE,
     	  );		


		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT group_id, concat( group_name, ' - ',  group_description) group_desc FROM {cce_groups} a ");
		$groupOptions = array();
		while ($row = db_fetch_object($result1)){
		  $groupOptions[$row->group_id ] = $row->group_desc; 
		}
		db_set_active('default');	


		$form['group'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Group'),
			'#options'=> $groupOptions,
			'#default_value' => $field->group_id,
			'#title' => t('Group'),
		);

// Category Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT assessment_category_code, assessment_category_desc  FROM {cce_assesment_categories} a ");
		$categoryOptions = array();
		while ($row = db_fetch_object($result1)){
		  $categoryOptions[$row->assessment_category_code ] = $row->assessment_category_desc; 
		}
		db_set_active('default');	


		$form['category'] = array(
			'#type' => 'select',
			'#description' => t('Please select the category'),
			'#options'=> $categoryOptions,
			'#title' => t('Assessment Category'),
			'#default_value' => $field->assessment_category_code,
		);

		
		$form['assessname'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique name for this type of Assessment'),
			  '#size' => 60,
			  '#maxlength' => 500,
		  '#title' => 'Assessment Name',			  
			'#default_value' => $field->assessment_name,
		);
		
		$form['weightage'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a weightage percentage for the final report.'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'Weightage Percentage ',
			'#default_value' => $field->academic_weighting_percentage,
		);
		

// Grading Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT grading_type_id, concat( grading_name, ' - ' , grading_desc ) grading_info FROM {cce_assesment_grading_type} a ");
		$gradingOptions = array();
		while ($row = db_fetch_object($result1)){
		  $gradingOptions[$row->grading_type_id ] = $row->grading_info; 
		}
		db_set_active('default');	

		

		$form['grading'] = array(
			'#type' => 'select',
			'#description' => t('Please select the grading'),
			'#options'=> $gradingOptions,
			'#title' => t('Grading Type'),
			'#default_value' => $field->grading_type_id,
			
		);


		$form['period'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter the range of months that the student will be evaluated for this assessment type'),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Period',
			 '#default_value' => $field->period,
		);
				

		$form['sequence'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a sequence number '),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Sequence',
			 '#default_value' => $field->ordering_sequence,
		);
/*				
		$form['asstypecode'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique value to identify this combination. A system generated value will be used if left blank'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'Assessment Type Code',
		);
*/		
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Edit Assessment'),
                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>',                                                 
	  );
$form['edit']['buttons']['cancel'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );

$form['buttons']['submit']['#attributes']['class']  = $form['buttons']['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;
		


}

function assess_edit_submit ($form, &$form_state) {
 $op = $form_state['values']['op'];

if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'assess/list';
		  return;	
	} 



		
	$assessId = $form_state['values']['assessment_id'];
	$year = $form_state['values']['year'];
	$terms = $form_state['values']['terms'];
	$group = $form_state['values']['group'];
	$category = $form_state['values']['category'];
	$assessname = $form_state['values']['assessname'];
	$weightage = $form_state['values']['weightage'];
	$grading = $form_state['values']['grading'];
	$period = $form_state['values']['period'];
	$sequence = $form_state['values']['sequence'];



			$assessname = str_replace("'", "''", $assessname);
			$period = str_replace("'", "''", $period);
			
		db_set_active('qtxt_db');


		$field = db_fetch_object(db_query("SELECT count(*) numvalue  FROM {cce_assesment_types} a, {cce_term} b WHERE b.term_id = a.term_id and b.year_id = %d and a.group_id = %d and  assessment_category_code = '%s' ", $year, $group, $category));
		db_set_active('default');

		  if (!$field) {
			drupal_not_found();
			return;
		  }

		$counter = $field->numvalue;	
		if ( empty($counter) ) {
		$counter = 1;
		}
		else {
		$counter = $counter + 1;
		}			
		$assTypeCode = $group . '-' . $category .  $counter ;

		db_set_active('qtxt_db');
		
		db_query("update {cce_assesment_types} set term_id = %d , group_id = %d,  assessment_category_code = '%s', assessment_name = '%s', period =  '%s', academic_weighting_percentage = %d, term_weighting_percentage = %d, grading_type_id = %d, ordering_sequence = %d, assessment_type_code = '%s' WHERE assessment_id = %d ", $terms, $group, $category, $assessname, $period, $weightage, $weightage, $grading, $sequence, $assTypeCode, $assessId);
			
//		db_query("update {cce_assess} set group_name = '%s', group_description = '%s' WHERE group_id = %d ", $groupName, $groupDesc, $groupId);
		
		db_set_active('default');

		drupal_set_message(t('The Assessment Name  %field has been updated.', array('%field' => $form_state['values']['assessname'])));

		cache_clear_all();
  		unset ( $_SESSION['group_filter_value'] );

		$form_state['redirect'] = 'assess/list';
		return;
}

function assess_delete(&$form_state, $fid) {


  
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT assessment_name FROM {cce_assesment_types} WHERE assessment_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }

		  $form['assessid'] = array('#type' => 'value', '#value' => $fid);
		  $form['assessname'] = array('#type' => 'value', '#value' => $field->assessment_name);
		 // $form['groupdesc'] = array('#type' => 'value', '#value' => $field->group_description);

		  return confirm_form($form,
			t('Are you sure you want to delete the Group Name %field?', array('%field' => $field->assessment_name)), 'assess',
			t('This action cannot be undone.  If you want to keep the user-entered data, instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('assess/edit/'. $fid))),
			t('Delete'), t('Cancel'));
		}

/**
 * Process a field delete form submission.
 */
function assess_delete_submit($form, &$form_state) {
		db_set_active('qtxt_db');
		db_query('DELETE FROM {cce_assesment_types} WHERE assessment_id = %d', $form_state['values']['assessid']);
		db_set_active('default');
		cache_clear_all();

		drupal_set_message(t('The Assessment Name  %field has been deleted.', array('%field' => $form_state['values']['assessname'])));
  		unset ( $_SESSION['group_filter_value'] );
		$form_state['redirect'] = 'assess/list';
		return;
}

function assess_delete_validate ($form, &$form_state) {
$op = $form_state['values']['op'];
$ccode = $form_state['values']['assessid'];
	db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT assessment_id FROM {cce_assesment_category_details} WHERE assessment_id = $ccode"));
	
		db_set_active('default');

		if ($field) {
				form_set_error('', t('You cant able to delete this Assessment, since Assessment Category  were already defined to this Assessment'));
		}	
}

function cce_assess($callback_arg = '') {
/*
        $output = drupal_get_form('assess_filter_form');
        $output .= drupal_get_form('assess_details');
  return $output;
  */
  
  $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;

//  drupal_set_message("Operamd - $op ");	
  
  switch ($op) {
    case t('Create Assessment'):
    case 'create':
case 'Cancel':
      $output = drupal_get_form('assess_create');
      break;

	  default:
      if (!empty($_POST['assess']) && isset($_POST['operation']) && ($_POST['operation'] == 'delete')) {
        $output = drupal_get_form('group_multiple_delete_confirm');
      }
      else {
        $output = drupal_get_form('assess_filter_form');
        $output .= drupal_get_form('assess_details');
      }
  }
  return $output;
  
}

function assess_create() {


// get the list of active Year

		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT year_id, concat( year_from, ' - ', year_to) year_desc FROM {cce_year} a where
		a.active_flag = 'Y'");
		$yearOptions = array( '' => t('Select the Year') );
		while ($row = db_fetch_object($result1)){
		  $yearOptions[$row->year_id ] = $row->year_desc; 
		}
		db_set_active('default');	


		$form['year'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Year'),
			'#options'=> $yearOptions,
			'#title' => t('Year'),
			'#disabled' => FALSE,
			'#ahah' => array(
				  	'path' => 'assess/year/ahahjs2',
				  	'wrapper' => 'ahah-wrapper-year',
				  	'method' => 'replace',
				  			)
		);
		
		 $form['terms'] = array(
				'#type' => 'select',
				'#title' => t('Terms'),
				'#options' =>  array( '' => t('Select ..') ),
				'#description' => t('Please select the Term'),
				'#disabled' => FALSE,
				 '#prefix' => '<div id = "ahah-wrapper-year">',
				'#suffix' => '</div>',
	
		  );		


		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT group_id, concat( group_name, ' - ',  group_description) group_desc FROM {cce_groups} order by group_name ");
		$groupOptions = array();
		while ($row = db_fetch_object($result1)){
		  $groupOptions[$row->group_id ] = $row->group_desc; 
		}
		db_set_active('default');	


		$form['group'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Group'),
			'#options'=> $groupOptions,
			'#title' => t('Group'),
		);

// Category Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT assessment_category_code, assessment_category_desc  FROM {cce_assesment_categories} order by assessment_category_desc");
		$categoryOptions = array();
		while ($row = db_fetch_object($result1)){
		  $categoryOptions[$row->assessment_category_code ] = $row->assessment_category_desc; 
		}
		db_set_active('default');	


		$form['category'] = array(
			'#type' => 'select',
			'#description' => t('Please select the category'),
			'#options'=> $categoryOptions,
			'#title' => t('Assessment Category'),
		);

		
		$form['assessname'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique name for this type of Assessment'),
			  '#size' => 60,
			  '#maxlength' => 500,
		  '#title' => 'Assessment Name',			  
		);
		
		$form['weightage'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a weightage percentage for the final report.'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'Weightage Percentage ',
		);
		

// Grading Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT grading_type_id, concat( grading_name, ' - ' , grading_desc ) grading_info FROM {cce_assesment_grading_type} order by grading_name ");
		$gradingOptions = array();
		while ($row = db_fetch_object($result1)){
		  $gradingOptions[$row->grading_type_id ] = $row->grading_info; 
		}
		db_set_active('default');	

		

		$form['grading'] = array(
			'#type' => 'select',
			'#description' => t('Please select the grading'),
			'#options'=> $gradingOptions,
			'#title' => t('Grading Type'),
		);


		$form['period'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter the range of months that the student will be evaluated for this assessment type'),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Period',
		);
				

		$form['sequence'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a sequence number '),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Sequence',
		);
				
		$form['asstypecode'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique value to identify this combination. A system generated value will be used if left blank'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'Assessment Type Code',
		);


		
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Create Assessment'), 
                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>',                                                
	  );

              $form['edit']['buttons']['cancel'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );
         $form['buttons']['submit']['#attributes']['class']  = $form['buttons']['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

}

function assess_create_submit($form, &$form_state) {


		  
   $op = $form_state['values']['op'];
 if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'assess/list';
		  return;	
	} 

  

	$year = $form_state['values']['year'];
	$terms = $form_state['values']['terms'];
	$group = $form_state['values']['group'];
	$category = $form_state['values']['category'];
	$assessname = $form_state['values']['assessname'];
		$assessname = str_replace("'", "''", $assessname);
	$weightage =  $form_state['values']['weightage'];
// $weightage1 =  $form_state['values']['twp'];

	$grading = $form_state['values']['grading'];
	$asstypecode = $form_state['values']['assTypeCode'];
	$period = $form_state['values']['period'];
		$period = str_replace("'", "''", $period);
    $sequence = $form_state['values']['sequence'];

	if ( empty($asstypecode) ) {
		db_set_active('qtxt_db');


		$field = db_fetch_object(db_query("SELECT count(*) numvalue  FROM {cce_assesment_types} a, {cce_term} b WHERE b.term_id = a.term_id and b.year_id = %d and a.group_id = %d and  assessment_category_code = '%s' ", $year, $group, $category));
		db_set_active('default');

		  if (!$field) {
			drupal_not_found();
			return;
		  }

		$counter = $field->numvalue;	
		if ( empty($counter) ) {
		$counter = 1;
		}
		else {
		$counter = $counter + 1;
		}			
			$assTypeCode = $group . '-' . $category .  $counter ;
	}
	else {
	$assTypeCode = $asstypecode;
	}
	drupal_set_message("Assignment Type Code - $assTypeCode-$terms");	
	


		db_set_active('qtxt_db');

			$groupName = str_replace("'", "''", $groupName);
			$groupDesc = str_replace("'", "''", $groupDesc);
			global $user;
   $uid=$user->uid; 
                 $sql = "select account_id from {cce_account_admin} where drupal_uid=$uid "   ; 

   $resultg2 = db_query($sql);   
   while ($rowg2 = db_fetch_object($resultg2)) {
       $cceArray =  $rowg2->account_id ; 
   }
   db_set_active('default');
   $cceaccountid=$cceArray;
   //drupal_set_message("accountid:$cceaccountid");
   
   db_set_active('qtxt_db');
//drupal_set_message("Assignmentycfghkhgfhkg Type Code - $terms");	



			$result = db_query( "INSERT INTO `cce_assesment_types` 
 (`assessment_id`,  `term_id`,  `group_id`,  `assessment_category_code`,  `assessment_name`,  `period`,  `academic_weighting_percentage`,  `term_weighting_percentage`,  `grading_type_id`,  `ordering_sequence`,  `assessment_type_code`,  `creation_date`,  `update_date`,  `created_by`,  `updated_by`,`account_id`) 
 VALUES  (  null,  $terms,  $group,  '$category',  '$assessname',  '$period', $weightage,  $weightage, $grading,  $sequence,  '$assTypeCode',  sysdate(),  sysdate(),  'admin',  'admin' ,$cceaccountid )");
		db_set_active('default');
			drupal_set_message(t("Your Assessment Type has been inserted successfully."));	

			unset ( $_SESSION['group_filter_value'] );
			
		  $form_state['redirect'] = 'assess/list';
		  return;

}



/**
 * Form builder; Return form for user administration filters.
 *
 * @ingroup forms
 * @see user_filter_form_submit()
 */
function assess_filter_form() {

			
	 $i = 0;
	  $form['filters'] = array(
		'#type' => 'fieldset',
		'#title' => t('Show only assess where'),

	  );

		db_set_active('qtxt_db');	

		$result = $result = db_query("select  distinct(assessment_id), assessment_name  from {cce_assesment_category_details_v} order by assessment_name " );


		$options = array('' => t('Select..'));

		$c2Val = "";
		$c3Val = "";
		$c4Val = "";
		$c5Val = "";
		
		if(!empty($_SESSION['group_filter_value'])) {
			$c2Val = &$_SESSION['group_filter_value'];
		} else {
			$c2Val = "";
		}
		if(!empty($_SESSION['section_filter_value'])) {
			$c3Val = &$_SESSION['section_filter_value'];
		} else {
			$c3Val = "";
		}
		if(!empty($_SESSION['section1_filter_value'])) {
			$c4Val = &$_SESSION['section1_filter_value'];
		} else {
			$c4Val = "";
		}
		if(!empty($_SESSION['section2_filter_value'])) {
			$c5Val = &$_SESSION['section2_filter_value'];
		} else {
			$c5Val = "";
		}
		

		
		while ($row = db_fetch_object($result)) {
				$options[$row->assessment_name ] =  $row->assessment_name; 
		}
db_set_active('default');

$key = 'group';				
 $names[$key] = 'Type ';
 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	  '#title' => 'Assessmenty Name',
      '#options' => $options,
    );
	


		/*
db_set_active('default');	 
		

		$form['filters']['group1'] = array(
		  '#title' => 'Assessmenty Type like ',
		  '#type' => 'textfield',
		  '#size' => 60,
		  '#maxlength' => 128,
		  '#default_value' => $c2Val,
		);
*/
		
		db_set_active('qtxt_db');	
		$result = db_query("select  group_id, group_description  from {cce_groups} order by group_description " );

$sectionoptions = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions[$row->group_id ] =  $row->group_description; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section';				
 $names[$key] = 'Type ';
 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	  '#title' => 'Group Description ',
      '#options' => $sectionoptions,
    );
	
	db_set_active('qtxt_db');	
		$result = db_query("select  grading_type_id, grading_name  from {cce_assesment_types_v} order by grading_name  " );

$sectionoptions1 = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions1[$row->grading_type_id ] =  $row->grading_name; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section1';				
 $names[$key] = 'Type ';
 
 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	  '#title' => 'Grading Name ',
      '#options' => $sectionoptions1,
    );
	db_set_active('qtxt_db');	
		$result = db_query("select   assessment_category_desc  from {cce_assesment_types_v} order by assessment_category_desc " );

$sectionoptions2 = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions2[$row->assessment_category_desc ] =  $row->assessment_category_desc; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section2';				
 $names[$key] = 'Type ';

 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	   '#title' => 'Assessment Category Description',
      '#options' => $sectionoptions2,
	  );




	 $form['filters']['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Filter'),  
                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/>',                                               
	  );
         

	return $form;

}



function assess_filter_form_submit($form, &$form_state) {
  $op = $form_state['values']['op'];
//  drupal_set_message("Filter Form Submit Operamd - $op ");	  
  switch ($op) {
    case t('Filter'): 


      if (isset($form_state['values']['group'])) {
		//	drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['group'];
			$_SESSION['group_filter_value'] = $form_state['values']['group'];
	  }
	  if (isset($form_state['values']['section'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section'];
			// drupal_set_message(t("In the Filter, Class  $filter"));	 	  
			
			$_SESSION['section_filter_value'] = $form_state['values']['section'];
	  }
	   if (isset($form_state['values']['section1'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section1'];
			// drupal_set_message(t("In the Filter, Class  selected $filter"));	 	  
			
			$_SESSION['section1_filter_value'] = $form_state['values']['section1'];
	  }
	   if (isset($form_state['values']['section2'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section2'];
			// drupal_set_message(t("In the Filter, Class  selected - $filter"));	 	  
			
			$_SESSION['section2_filter_value'] = $form_state['values']['section2'];
	  }

	  
      break;
  }
  
  $form_state['redirect'] = 'assess';
  return;
}



function assess_details($form_state) {
global $user;
$profile =  profile_load_profile($user);
$myMobileNumber =  $user->profile_mobile;  

  $header = array(
    array(),
    array('data' => t('Group Name'), 'field' => 'b.standard'),
    array('data' => t('Group Description'), 'field' => 'b.section'),
	t('Operations'),
  );

$clVal = &$_SESSION['group_filter_value'] ;
$c2Val = &$_SESSION['section_filter_value'] ;
$c3Val = &$_SESSION['section1_filter_value'] ;
$c4Val = &$_SESSION['section2_filter_value'] ;

//drupal_set_message(t("Class Filter 1 - $c3Val"));	

  
$filterClass = "";
    if ( $clVal != "" ) {
		$clVal = strtoupper($clVal);
			$filterClass = " and upper(b.assessment_name) like '%$clVal%' ";
	} else {
			$filterClass = " and b.assessment_name = b.assessment_name ";
	}
	$filterClass1 = "";
	if ( $c2Val != "" ) {
					$filterClass1 = " and b.group_id  = $c2Val ";
					//  drupal_set_message(t("Class1 - $filterClass1"));
	} else {
			$filterClass1 = " and  b.group_id = b.group_id ";
	}
	$filterClass2 = "";
	if ( $c3Val != "" ) {
		
			$filterClass2 = " and b.grading_type_id = $c3Val ";
			// drupal_set_message(t("Class1 - $filterClass2"));
	} else {
			$filterClass2 = " and b.grading_type_id = b.grading_type_id ";
	}
	$filterClass3 = "";
	if ( $c4Val != "" ) {
			$filterClass3 = " and b.assessment_category_desc= '$c4Val' ";
			// drupal_set_message(t("Class1 - $filterClass3"));
	} else {
			$filterClass3 = " and b.assessment_category_desc = b.assessment_category_desc ";
	}
	



  db_set_active('qtxt_db');	
  $sql = "select assessment_name, year, term_name, group_name, group_description, assessment_category_code, assessment_category_desc, 
  grading_name, grading_desc, period, academic_weighting_percentage, assessment_type_code, ordering_sequence, 
  creation_date, assessment_id,term_weighting_percentage    from  {cce_assesment_types_v} b  where 1 = 1  " 
  . $filterClass  . $filterClass1  . $filterClass2  . $filterClass3  ." 
  order by assessment_name,group_name, year, term_name, assessment_category_code, ordering_sequence " ; 
    $query_count = "select COUNT(assessment_id) from  {cce_assesment_types_v} b  where 1 = 1 " 
	. $filterClass . $filterClass1  . $filterClass2  . $filterClass3  ;

  
   $sql .= tablesort_sql($header);

  $result = pager_query($sql, 1000, 0, $query_count);
  db_set_active('default');


    $form['access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Access log settings'),
    '#tree' => TRUE,
	'#visible' => false,
  );


  $accounts = array();

$i = 1;  
  while ($account = db_fetch_object($result)) {

  $form['access']['account'][$i] = array(
		'#type' => 'checkbox',
		'#return_value' => $account->assessment_id,
		'#default_value' => 0,
		'#tree' => TRUE,

	  );

 
 
    $form['access']['assessment_name'][$account->assessment_id] = array('#value' => $account->assessment_name);
    $form['access']['year'][$account->assessment_id] =  array('#value' => $account->year);
    $form['access']['term_name'][$account->assessment_id] = array('#value' => $account->term_name);
    $form['access']['group_description'][$account->assessment_id] =  array('#value' => $account->group_description);
    $form['access']['assessment_category_code'][$account->assessment_id] = array('#value' => $account->assessment_category_code);
    $form['access']['assessment_category_desc'][$account->assessment_id] =  array('#value' => $account->assessment_category_desc);
    $form['access']['grading_name'][$account->assessment_id] = array('#value' => $account->grading_name);
    $form['access']['grading_desc'][$account->assessment_id] =  array('#value' => $account->grading_desc);
    // $form['access']['period'][$account->assessment_id] = array('#value' => $account->period);
    $form['access']['academic_weighting_percentage'][$account->assessment_id] =  array('#value' => $account->academic_weighting_percentage);
$form['access']['term_weighting_percentage'][$account->assessment_id] =  array('#value' => $account->term_weighting_percentage);
    
  //  $form['access']['assessment_type_code'][$account->assessment_id] = array('#value' => $account->assessment_type_code);
    $form['access']['ordering_sequence'][$account->assessment_id] =  array('#value' => $account->ordering_sequence);
    $form['access']['creation_date'][$account->assessment_id] =  array('#value' => $account->creation_date);
	
	
    $form['access']['assessment_id'][$account->assessment_id] =  array('#type' => 'hidden','#value' => $account->assessment_id);
	$form['access']['operations'][$account->assessment_id] = array('#value' => l(t('edit'), "assess/edit/$account->assessment_id", array('query' => $destination)));	
	$form['access']['operations2'][$account->assessment_id] = array('#value' => l(t('delete'), "assess/delete/$account->assessment_id", array('query' => $destination)));	
	$i = $i + 1;
  }
// db_set_active('default');

  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));
  $form['#theme'] = 'access_description_theme';   
  $form['totalcount'] = array(
	'#type' => 'hidden', '#default_value' => ($i  -1 )
  );  
  return $form;
}

function v3_cce_assess_theme() {
	return array(
		'access_description_theme' => array('arguments'=> array('form' => NULL),),
	);
}

function theme_access_description_theme($form)
{
$rows = array();
$i = 1;

foreach(element_children($form['access']['assessment_id']) as $key) {
	$row = array(); 
//       $row[] =  drupal_render($form['access']['account'][$i]);
       $row[] =  drupal_render($form['access']['assessment_name'][$key]);
       $row[] =  drupal_render($form['access']['year'][$key]);
       $row[] =  drupal_render($form['access']['group_description'][$key]);
       $row[] =  drupal_render($form['access']['assessment_category_code'][$key]);
       $row[] =  drupal_render($form['access']['assessment_category_desc'][$key]);
       $row[] =  drupal_render($form['access']['grading_name'][$key]);
       $row[] =  drupal_render($form['access']['grading_desc'][$key]);
    //   $row[] =  drupal_render($form['access']['period'][$key]);
       $row[] =  drupal_render($form['access']['academic_weighting_percentage'][$key]);
 $row[] =  drupal_render($form['access']['term_weighting_percentage'][$key]);


     //  $row[] =  drupal_render($form['access']['assessment_type_code'][$key]);
       $row[] =  drupal_render($form['access']['ordering_sequence'][$key]);
       $row[] =  drupal_render($form['access']['creation_date'][$key]);
     //  $row[] =  drupal_render($form['access']['assessment_id'][$key]);
       $row[] =  drupal_render($form['access']['operations'][$key]);	   
       $row[] =  drupal_render($form['access']['operations2'][$key]);	   
	$rows[] = $row; 
	$i = $i +1 ;
}

if(count($rows)){
//			$header = array( theme('table_select_header_cell'), t('Group Name'), t('Group Desc'), t('Group Id') );
				$header = array(  t('Assessment Name'), t('Year'), t('Group Description'), t('Assessment Category Code'), t('Assessment Category Description'), t('Grading Name'), t('Grading Description'), t('Academic Weighted Percentage'),t('Term Weighted Percentage'), t('Ordering Sequence'), t('Creation Date')  );
				
				  $header[] = array('data' => t('Operations'), 'colspan' => 2);
  }
  else{
    $header = array(t('Assessment Name'), t('Year')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No assess were found'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows); 
//$output .= drupal_render($form['options']); 
// $output .= drupal_render($form['options']['submit']); 
  $form['access']['#access'] = false;
 return $output . drupal_render($form); 
 return $output ; 
}  





function ahah_for_year_to_derive_term() {

$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;
		$gid = $form['#post']['year'];
		db_set_active('qtxt_db');

		$sqlg = "select concat(term_name, ' - ' , term_description) term, term_id  from {cce_term} where year_id = $gid  and term_id > 0 order by term_name";

        $resultg = db_query($sqlg);
		$valueg[''] = 'Select a Value..';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->term_id] = $datag->term;
		}
		db_set_active('default');

		$form['terms']['#options'] = $valueg;
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
	
           $form = form_builder('form_details', $form, $form_state);			
				$output = $form['terms'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));

}

