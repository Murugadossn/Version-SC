<?php



function v3_cce_coschol_descriptors_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'v3_cce_coschol_descriptors'),
  );
}


function v3_cce_coschol_descriptors_help($path, $arg) {
  global $user;

  switch ($path) {
    case 'coscholdesc':
      return '<p>'. t('Define a co scholastic descriptors for the co scholastic assessment categories. If all the default values has been defined, then we can create our own descriptors') .'</p>';
	
	}
  
}  
function v3_cce_coschol_descriptors_menu() {
	$items['coscholdesc'] = array(
    'title' => 'CCE - Define Assessment Category Type',
    'description' => 'List, add, and edit coscholdesc.',
    'page callback' => 'cce_coscholdesc',
    'page arguments' => array('list'),
   //  'access arguments' => array('administer users'),
	'type' => MENU_CALLBACK,	
'access callback' => 'user_access',
		'access arguments' => array('access content'),	
	);

  $items['coscholdesc/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
'access callback' => 'user_access',
		'access arguments' => array('access content'),	
    'weight' => -10,
  );
  $items['coscholdesc/create'] = array(
    'title' => 'Add Assessment Category Descriptor Type',
    'page arguments' => array('create'),
  //  'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );	
  
  $items['coscholdesc/edit'] = array(
    'title' => 'Edit Assessment Category Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('coscholdesc_edit'),
   // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
  $items['coscholdesc/delete'] = array(
    'title' => 'Delete Assessment Category Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('coscholdesc_delete'),
   // 'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );  

  
 $items['coscholdesc/year/ahahjs2'] = array(
        'page callback' => 'ahah_for_assterm_to_derive_defaultvalues_for_descriptors',
        'type' => MENU_CALLBACK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
	  
  
 $items['coscholdesc/year/ahahjs1'] = array(
        'page callback' => 'cocholdesc_ahah_for_category_details',
        'type' => MENU_CALLBACK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
	  
 $items['coscholdesc/year/ahahjs0'] = array(
        'page callback' => 'cocholdesc_ahah_for_group',
        'type' => MENU_CALLBACK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
	 
 

return $items;
}

function coscholdesc_edit(&$form_state, $fid) {
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT descriptor_name, max_marks , descriptor_description, category_short_code, category_order  FROM {cce_coschol_assesment_cat_det_descriptor_v} WHERE assessment_cat_det_descriptor_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
		  $form['assessment_cat_det_descriptor_id'] = array('#type' => 'value',
			'#value' => $fid,
		  );		  



		$form['userdefinedvalue'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter your own assessment category types'),
			'#title' => t('Assessment Category Type'),
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->descriptor_name,
		);			

		$form['userdefineddesc'] = array(
			'#type' => 'textfield',
			'#description' => t('Descriptor Group if needed'),
			'#title' => t('Descriptor Group'),
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->descriptor_description,				  
		);

		$form['userdefinedmarks'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter max marks for the descriptor'),
			'#title' => t('Max Marks'),
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->max_marks,			  
		);				
		$form['userdefinedshortcode'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter unique short code for this descriptor'),
			'#title' => t('Descriptor Short Code'),
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->category_short_code,				  
		);			
		$form['userdefinedcategoryorder'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter order of this descriptor'),
			'#title' => t('Descriptor Category Order'),
			  '#size' => 60,
			  '#maxlength' => 500,	
			'#default_value' => $field->category_order,				  
		);			

	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Edit Assessment Category Descriptor Type'), 
                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/><br/><br/>',                                                
	  );

 $form['buttons']['submit1'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );
$form['buttons']['submit']['#attributes']['class']  = $form['buttons']['submit']['#attributes']['class'] . ' qbsubmit';
	
	return $form;
		


}

function coscholdesc_edit_submit ($form, &$form_state) {
$op = $form_state['values']['op'];
 // drupal_set_message(t("$op"));  
	if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'coscholdesc';
		  return;	
	} 

		
	$coscholdescId = $form_state['values']['assessment_cat_det_descriptor_id'];
	
	$userdefinedvalue = $form_state['values']['userdefinedvalue'];
	$userdefinedmarks = $form_state['values']['userdefinedmarks'];
	$userdefinedshortcode = $form_state['values']['userdefinedshortcode'];
	$userdefineddesc = $form_state['values']['userdefineddesc'];
	$userdefinedcategoryorder = $form_state['values']['userdefinedcategoryorder'];
	
	
	$userdefinedvalue = str_replace("'", "''", $userdefinedvalue);
	$userdefineddesc = str_replace("'", "''", $userdefineddesc);		
	$userdefinedshortcode = str_replace("'", "''", $userdefinedshortcode);			

			
		db_set_active('qtxt_db');
		
		db_query("update {cce_assesment_cat_det_descriptor} set  descriptor_name = '%s', max_marks = '%d', descriptor_description = '%s',  category_short_code = '%s', category_order = '%d'  WHERE assessment_cat_det_descriptor_id = %d ", $userdefinedvalue, $userdefinedmarks, $userdefineddesc, $userdefinedshortcode,  $userdefinedcategoryorder,  $coscholdescId);
			

		db_set_active('default');

		drupal_set_message(t('The Assessment Category Descriptor  %field has been updated.', array('%field' => $form_state['values']['userdefinedvalue'])));

		cache_clear_all();
  		unset ( $_SESSION['group_filter_value'] );

		$form_state['redirect'] = 'coscholdesc/list';
		return;
}

function coscholdesc_delete(&$form_state, $fid) {


  
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT descriptor_name, assessment_category_type, assessment_name  FROM {cce_coschol_assesment_cat_det_descriptor_v} WHERE assessment_cat_det_descriptor_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }

		  $form['coscholdescid'] = array('#type' => 'value', '#value' => $fid);
		  $form['coscholdescname'] = array('#type' => 'value', '#value' => $field->descriptor_name);
		  $form['coscholcategtype'] = array('#type' => 'value', '#value' => $field->assessment_category_type);
		  $form['coscholassessname'] = array('#type' => 'value', '#value' => $field->assessment_name);
		 // $form['groupdesc'] = array('#type' => 'value', '#value' => $field->group_description);

		  return confirm_form($form,
			t('Are you sure you want to delete the Descriptor Name -  %field  defined for Assessment Name %field2 and category type %field3 ?', array('%field' => $field->descriptor_name, '%field2' => $field->assessment_name, '%field3' => $field->assessment_category_type)), 'coscholdesc',
			t('This action cannot be undone.  If you want to keep the user-entered data, instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('coscholdesc/edit/'. $fid))),
			t('Delete'), t('Cancel'));
		}

/**
 * Process a field delete form submission.
 */
function coscholdesc_delete_submit($form, &$form_state) {
		db_set_active('qtxt_db');
		db_query('DELETE FROM {cce_assesment_cat_det_descriptor} WHERE assessment_cat_det_descriptor_id = %d', $form_state['values']['coscholdescid']);
		db_set_active('default');
		cache_clear_all();

		drupal_set_message(t('The Descriptor %field has been deleted.', array('%field' => $form_state['values']['coscholdescname'])));
  		unset ( $_SESSION['group_filter_value'] );
		$form_state['redirect'] = 'coscholdesc/list';
		return;
}


function cce_coscholdesc($callback_arg = '') {
/*
        $output = drupal_get_form('coscholdesc_filter_form');
        $output .= drupal_get_form('coscholdesc_details');
  return $output;
  */
  
  $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;

//  drupal_set_message("Operamd - $op ");	
  
  switch ($op) {
    case t('Create Assessment Category Descriptor Type'):
    case 'create':
      $output = drupal_get_form('coscholdesc_create');
      break;

	  default:
      if (!empty($_POST['coscholdesc']) && isset($_POST['operation']) && ($_POST['operation'] == 'delete')) {
        $output = drupal_get_form('group_multiple_delete_confirm');
      }
      else {
        $output = drupal_get_form('coscholdesc_filter_form');
        $output .= drupal_get_form('coscholdesc_details');
      }
  }
  return $output;
  
}

function coscholdesc_create() {


// get the list of active Year

		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT group_id, concat( group_name , ' - ' , group_description ) 'groupdesc' FROM {cce_groups} order by group_name");
		$accessOptions = array( '' => t('Select the Group Name') );
		while ($row = db_fetch_object($result1)){
		  $accessOptions[$row->group_id ] = $row->groupdesc; 
		}
		db_set_active('default');	

		
		$form['group'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Group Name'),
			'#options'=> $accessOptions,
			'#title' => t('Group'),
			'#disabled' => FALSE,
			'#ahah' => array(
				  	'path' => 'coscholdesc/year/ahahjs0',
				  	'wrapper' => 'ahah-wrapper-group',
				  	'method' => 'replace',
				  			)			
		);
		$form['assessname'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Assessment Name'),
			'#options'=> array( '' => t('Select ..') ),
			'#title' => t('Assessment Name'),
			'#disabled' => FALSE,
			'#ahah' => array(
				  	'path' => 'coscholdesc/year/ahahjs1',
				  	'wrapper' => 'ahah-wrapper-catdetlist',
				  	'method' => 'replace',
				  			),
			 '#prefix' => '<div id = "ahah-wrapper-group">',
				'#suffix' => '</div>',								
		);
		
		//$catOptions = array( '' => t('Select the Assessment Category Detail') );

		$form['assesscatdetlist'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Category'),
			'#options'=> array( '' => t('Select ..') ),
			'#title' => t('Category Detail'),
			'#disabled' => FALSE,
			'#ahah' => array(
				  	'path' => 'coscholdesc/year/ahahjs2',
				  	'wrapper' => 'ahah-wrapper-defaultlist',
				  	'method' => 'replace',
				  			),
			 '#prefix' => '<div id = "ahah-wrapper-catdetlist">',
				'#suffix' => '</div>',	
		);

		$form['default_list']=array(
				'#type'=>'select',
				'#title' => t('Default Assessment Category Descriptors '),
				'#description' => t(' Values provided by CBSE. Plese use Ctls + Select to select multiple values.'),
			//	'#default_value' => array('1'=>'Joe'),
				'#options' =>  array( '' => t('Select ..') ),
				'#multiple' => true,
				'#attributes'=>array('size'=>20),
				 '#prefix' => '<div id = "ahah-wrapper-defaultlist">',
				'#suffix' => '</div>',				
			);

		$form['userdefinedvalue'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter co scholastic descriptor name'),
			'#title' => t('Other Descriptor'),
			  '#size' => 60,
			  '#maxlength' => 500,	
		);			
			
		$form['userdefinedmarks'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter max marks for the descriptor'),
			'#title' => t('Max Marks'),
			  '#size' => 60,
			  '#maxlength' => 500,	
		);				
		$form['userdefineddesc'] = array(
			'#type' => 'textfield',
			'#description' => t('Descriptor Group if needed'),
			'#title' => t('Descriptor Group'),
			  '#size' => 60,
			  '#maxlength' => 500,	
		);
		$form['userdefinedshortcode'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter unique short code for this descriptor'),
			'#title' => t('Descriptor Short Code'),
			  '#size' => 60,
			  '#maxlength' => 500,	
		);			
		$form['userdefinedcategoryorder'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter order of this descriptor'),
			'#title' => t('Descriptor Category Order'),
			  '#size' => 60,
			  '#maxlength' => 500,	
		);				
			
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Create Assessment Category Descriptor Type'),
                
                                                           
	  );
$form['buttons']['submit1'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Cancel'),                                                 
	  );
$form['buttons']['submit']['#attributes']['class']  = $form['buttons']['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

}

function coscholdesc_create_submit($form, &$form_state) {


		  
   $op = $form_state['values']['op'];

 // drupal_set_message(t("$op"));  
	if ( $op == "Cancel" ) {
		  $form_state['redirect'] = 'coscholdesc';
		  return;	
	} 
	
  

	$assessId = $form_state['values']['assessname'];
	$assesscatdetlistId  = $form_state['values']['assesscatdetlist'];
	
	$default_list = $form_state['values']['default_list'];
	$userdefinedvalue = $form_state['values']['userdefinedvalue'];
	$userdefinedmarks = $form_state['values']['userdefinedmarks'];
	$userdefinedshortcode = $form_state['values']['userdefinedshortcode'];
	$userdefineddesc = $form_state['values']['userdefineddesc'];
$userdefinedcategoryorder = $form_state['values']['userdefinedcategoryorder'];
	
	
	$userdefinedvalue = str_replace("'", "''", $userdefinedvalue);
	$userdefineddesc = str_replace("'", "''", $userdefineddesc);		
	$userdefinedshortcode = str_replace("'", "''", $userdefinedshortcode);			

	$new_array = array_values($default_list); 		
	foreach($new_array as $key => $value) {
	  if($value == "") {
		unset($new_array[$key]);
	  }
	}

	$final_array = array_values($new_array); 	
	$finalcount= count(	$final_array );
	$comma_separated = implode(",", $final_array);
	
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("select assessment_category_code, assessment_category_type, assessment_type_code from cce_assesment_category_details where assessment_category_detail_id = %d", $assesscatdetlistId));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }	
		$asscategcode = $field->assessment_category_code;
		$asscategtype = $field->assessment_category_type;		
		$asstypecode = $field->assessment_type_code;

	//drupal_set_message(t("Your coscholdescment Type - $comma_separated"));	
	//drupal_set_message("user defined - $userdefinedvalue ");	
	//drupal_set_message("user defined desc - $userdefineddesc ");	

	//drupal_set_message("Count - $finalcount ");	

	if ( $finalcount > 0 ) {
		foreach ( $final_array as $k => $v) {
			db_set_active('qtxt_db');	
			$result1 = db_fetch_object( db_query("select descriptor_name, max_marks, descriptor_description, category_short_code, category_order from cce_assesment_cat_det_descriptor_master where assessment_cat_det_descriptor_id  = $v") );

			db_set_active('default');		
			
			if ( $result1->max_marks <= 0 ) {
				$total_max_marks = null;
			} else {
				$total_max_marks = $result1->max_marks;
			}
			global $user;
   $uid=$user->uid; 
                 $sql = "select account_id from {cce_account_admin} where drupal_uid=$uid "   ; 

   $resultg2 = db_query($sql);   
   while ($rowg2 = db_fetch_object($resultg2)) {
       $cceArray =  $rowg2->account_id ; 
   }
   db_set_active('default');
   $cceaccountid=$cceArray;
			db_set_active('qtxt_db');	
		$result = db_query( "INSERT INTO `cce_assesment_cat_det_descriptor` (`assessment_cat_det_descriptor_id`,  `assessment_category_detail_id`,  `assessment_category_code`,  `assessment_category_type`,  `descriptor_name`,  `max_marks`,  `descriptor_description`,  `category_short_code`,  `category_order`,  `assessment_id`,  `assessment_type_code`,  `creation_date`,  `update_date`,  `created_by`,  `updated_by`,  `subject_id`,  `subject_name`,  `assessment_date`,  `account_grade_id`,  `master_assessment_cat_det_descriptor_id`,`account_id`)  VALUES  (  null ,  $assesscatdetlistId,  '$asscategcode' ,  '$asscategtype',  '$result1->descriptor_name',  ifnull($total_max_marks,null),  ifnull('$result1->descriptor_description', null) , '$result1->category_short_code',  ifnull($result1->category_order, null),   $assessId,  '$asstypecode',  sysdate(),   sysdate(),   'admin',   'admin', null,  null,  null ,  null,  $v ,$cceaccountid )");  
		
	
		
			db_set_active('default');
//			drupal_set_message(t("Your Assessment Type has been inserted successfully."));			
			 
			}
	}	
	
	if ( $userdefinedvalue != "") {
	global $user;
   $uid=$user->uid; 
                 $sql = "select account_id from {cce_account_admin} where drupal_uid=$uid "   ; 

   $resultg2 = db_query($sql);   
   while ($rowg2 = db_fetch_object($resultg2)) {
       $cceArray =  $rowg2->account_id ; 
   }
   db_set_active('default');
   $cceaccountid=$cceArray;
			db_set_active('qtxt_db');	
		$result = db_query( "INSERT INTO `cce_assesment_cat_det_descriptor` (`assessment_cat_det_descriptor_id`,  `assessment_category_detail_id`,  `assessment_category_code`,  `assessment_category_type`,  `descriptor_name`,  `max_marks`,  `descriptor_description`,  `category_short_code`,  `category_order`,  `assessment_id`,  `assessment_type_code`,  `creation_date`,  `update_date`,  `created_by`,  `updated_by`,  `subject_id`,  `subject_name`,  `assessment_date`,  `account_grade_id`,  `master_assessment_cat_det_descriptor_id`,`account_id`)  VALUES  (  null ,  $assesscatdetlistId,  '$asscategcode' ,  '$asscategtype',  '$userdefinedvalue',  $userdefinedmarks,  '$userdefineddesc' , '$userdefinedshortcode',  $userdefinedcategoryorder,   $assessId,  '$asstypecode',  sysdate(),   sysdate(),   'admin',   'admin', null,  null,  null ,  null,  null,$cceaccountid  )");  
		
			db_set_active('default');	
	}
			
			/*	
	if ( $userdefinedvalue != "") {
		db_set_active('qtxt_db');	
		$result = db_query( "INSERT INTO `cce_assesment_category_details`   (`assessment_category_detail_id`,   `assessment_category_code`,   `assessment_category_type`,   `assessment_group`,   `assessment_description`,   `assessment_id`,   `assessment_type_code`,   `creation_date`,   `update_date`,   `created_by`,   `updated_by`)   VALUES   (   null, '$asscategcode',   '$userdefinedvalue',   null,   '$userdefineddesc',   $assessId,   '$asstypecode',  sysdate(),   sysdate(),   'admin',   'admin'   )");  

		db_set_active('default');			
	}
*/
	drupal_set_message(t("Your Assessment Category Types have been inserted successfully."));	
	
	
/*

echo $comma_separated; 
		db_set_active('qtxt_db');

			$groupName = str_replace("'", "''", $groupName);
			$groupDesc = str_replace("'", "''", $groupDesc);


			$result = db_query( "INSERT INTO `cce_assesment_types`  (`coscholdescment_id`,  `term_id`,  `group_id`,  `coscholdescment_category_code`,  `coscholdescment_name`,  `period`,  `academic_weighting_percentage`,  `term_weighting_percentage`,  `grading_type_id`,  `ordering_sequence`,  `coscholdescment_type_code`,  `creation_date`,  `update_date`,  `created_by`,  `updated_by`)  VALUES  (  null,  $terms,  $group,  '$category',  '$coscholdescname',  '$period', $weightage,  $weightage, $grading,  $sequence,  '$assTypeCode',  sysdate(),  sysdate(),  'admin',  'admin'  )");
		db_set_active('default');
			drupal_set_message(t("Your coscholdescment Type has been inserted successfully."));	
*/
			unset ( $_SESSION['group_filter_value'] );
			
		  $form_state['redirect'] = 'coscholdesc/list';
		  return;

}



/**
 * Form builder; Return form for user administration filters.
 *
 * @ingroup forms
 * @see user_filter_form_submit()
 */
function coscholdesc_filter_form() {

			
	 $i = 0;
	  $form['filters'] = array(
		'#type' => 'fieldset',
		'#title' => t('Show only coscholdesc where'),

	  );
	 
		$c2Val = "";
		$c3Val = "";
		$c4Val = "";
		$c5Val = "";		
		
		if(!empty($_SESSION['group_filter_value'])) {
			$c2Val = &$_SESSION['group_filter_value'];
		} else {
			$c2Val = "";
		}
		if(!empty($_SESSION['section_filter_value'])) {
			$c3Val = &$_SESSION['section_filter_value'];
		} else {
			$c3Val = "";
		}
		if(!empty($_SESSION['section1_filter_value'])) {
			$c4Val = &$_SESSION['section1_filter_value'];
		} else {
			$c4Val = "";
		}
		if(!empty($_SESSION['section2_filter_value'])) {
			$c5Val = &$_SESSION['section2_filter_value'];
		} else {
			$c5Val = "";
		}
db_set_active('qtxt_db');	
		$result = db_query("select  distinct(group_name)  from {cce_groups} order by group_name  " );

$sectionoptions2 = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions2[$row->group_name ] =  $row->group_name; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section2';				
 $names[$key] = 'Type ';

 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	   '#title' => 'Group Name',
      '#options' => $sectionoptions2,
	  );

	db_set_active('qtxt_db');	
		$result = db_query("select  distinct(assessment_id), assessment_name  from {cce_assesment_types} a 
		where a.assessment_category_code not in ( 'FA', 'SA') order by assessment_name" );

$sectionoptions = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions[$row->assessment_id ] =  $row->assessment_name; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section';				
 $names[$key] = 'Type ';
 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	  '#title' => 'Assessment Name ',
      '#options' => $sectionoptions,
    );

		
	  /*
		db_set_active('qtxt_db');	

		$result = db_query("select distinct(assessment_category_type), descriptor_name, assessment_cat_det_descriptor_id  
from {cce_assesment_category_details} where term_id = 0 order by assessment_category_type" );

		$options = array('' => t('Select..'));

		$c2Val = "";
		if(!empty($_SESSION['group_filter_value'])) {
			$c2Val = &$_SESSION['group_filter_value'];
		} else {
			$c2Val = "";
		}
		
		while ($row = db_fetch_object($result)) {
				$options[$row->assessment_category_type ] =  $row->assessment_category_type; 
		}

		db_set_active('default');	 
		*/

		$form['filters']['group'] = array(
		  '#title' => 'Assessment Category Descriptor like ',
		  '#type' => 'textfield',
		  '#size' => 60,
		  '#maxlength' => 200,
		  '#default_value' => $c2Val,
		);

	
	
	db_set_active('qtxt_db');	
		$result = db_query("select  distinct(assessment_category_type),assessment_category_detail_id  from {cce_assesment_category_details} order by assessment_category_type  " );

$sectionoptions1 = array('' => t('Select..'));

while ($row = db_fetch_object($result)) {
  $sectionoptions1[$row->assessment_category_type ] =  $row->assessment_category_type; //This is the only line that changed from the code above.
}
db_set_active('default');

$key = 'section1';				
 $names[$key] = 'Type ';
 
 $form['filters']['status'][$key] = array(
      '#type' => 'select',
	  '#title' => 'Assessment Category Type ',
      '#options' => $sectionoptions1,
    );
	


	 $form['filters']['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Filter'), 
                '#prefix' => '<br/><br/><br/><br/><br/><br/><br/>',                                                
	  );
$form['filters']['buttons']['submit']['#attributes']['class']  = $form['filters']['buttons']['submit']['#attributes']['class'] . ' qbsubmit';

	return $form;

}



function coscholdesc_filter_form_submit($form, &$form_state) {
  $op = $form_state['values']['op'];
//  drupal_set_message("Filter Form Submit Operamd - $op ");	  
  switch ($op) {
    case t('Filter'): 


      if (isset($form_state['values']['group'])) {
		//	drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['group'];
			$_SESSION['group_filter_value'] = $form_state['values']['group'];
	  }
	  if (isset($form_state['values']['section'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section'];
			// drupal_set_message(t("In the Filter, Class  $filter"));	 	  
			
			$_SESSION['section_filter_value'] = $form_state['values']['section'];
	  }
	   if (isset($form_state['values']['section1'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section1'];
			// drupal_set_message(t("In the Filter, Class  selected $filter"));	 	  
			
			$_SESSION['section1_filter_value'] = $form_state['values']['section1'];
	  }
	   if (isset($form_state['values']['section2'])) {
			// drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['section2'];
			// drupal_set_message(t("In the Filter, Class  selected - $filter"));	 	  
			
			$_SESSION['section2_filter_value'] = $form_state['values']['section2'];
	  }
	  
      break;
  }
  
  $form_state['redirect'] = 'coscholdesc';
  return;
}



function coscholdesc_details($form_state) {
global $user;
$profile =  profile_load_profile($user);
$myMobileNumber =  $user->profile_mobile;  

  $header = array(
    array(),
    array('data' => t('Group Name'), 'field' => 'b.standard'),
    array('data' => t('Group Description'), 'field' => 'b.section'),
	t('Operations'),
  );

$clVal = &$_SESSION['group_filter_value'] ;
// drupal_set_message(t("Class Filter 1 - $clVal"));	
$c2Val = &$_SESSION['section_filter_value'] ;
 // drupal_set_message(t("Class Filter 1 - $c2Val"));	
$c3Val = &$_SESSION['section1_filter_value'] ;
 // drupal_set_message(t("Class Filter 1 - $c3Val"));	
$c4Val = &$_SESSION['section2_filter_value'] ;
 // drupal_set_message(t("Class Filter 1 - $c4Val"));	


  
$filterClass = "";
    if ( $clVal != "" ) {
		$clVal = strtoupper($clVal);
			$filterClass = " and upper(b.descriptor_name) like '%$clVal%' ";
	} else {
			$filterClass = " and b.descriptor_name = b.descriptor_name ";
	}
	$filterClass1 = "";
	if ( $c2Val != "" ) {
					$filterClass1 = " and b.assessment_id  = $c2Val ";
					// drupal_set_message(t("Class1 - $filterClass1"));
	} else {
			$filterClass1 = " and  b.assessment_id = b.assessment_id ";
	}
	$filterClass2 = "";
	if ( $c3Val != "" ) {
		
			$filterClass2 = " and b.assessment_category_type = '$c3Val' ";
			// drupal_set_message(t("Class1 - $filterClass2"));
	} else {
			$filterClass2 = " and b.assessment_category_type = b.assessment_category_type ";
	}
	$filterClass3 = "";
	if ( $c4Val != "" ) {
			$filterClass3 = " and b.group_name = '$c4Val' ";
			// drupal_set_message(t("Class1 - $filterClass3"));
	} else {
			$filterClass3 = " and b.group_name = b.group_name ";
	}

	

  db_set_active('qtxt_db');	
 
  $sql = "select descriptor_name, descriptor_description, category_short_code , assessment_category_type, assessment_name,
  group_name, term_name, year, assessment_type_code , assessment_category_detail_id, assessment_id, assessment_cat_det_descriptor_id,max_marks 
  from  {cce_coschol_assesment_cat_det_descriptor_v} b  where 1=1 " . $filterClass . $filterClass1  . $filterClass2  . $filterClass3  .
  " order by assessment_name, assessment_category_type " ; 
 
  
    $query_count = "select COUNT(assessment_cat_det_descriptor_id) from  {cce_coschol_assesment_cat_det_descriptor_v} b  where  1=1 " 
	. $filterClass . $filterClass1  . $filterClass2  . $filterClass3 ;
	//echo"se".$query_count;


  
   $sql .= tablesort_sql($header);
  

  $result = pager_query($sql, 1000, 0, $query_count);
  db_set_active('default');


    $form['access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Access log settings'),
    '#tree' => TRUE,
	'#visible' => false,
  );


  $accounts = array();

$i = 1;  
  while ($account = db_fetch_object($result)) {

  $form['access']['account'][$i] = array(
		'#type' => 'checkbox',
		'#return_value' => $account->assessment_cat_det_descriptor_id,
		'#default_value' => 0,
		'#tree' => TRUE,

	  );

 
    $form['access']['descriptor_name'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->descriptor_name);
  //  $form['access']['descriptor_description'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->descriptor_description);
  //  $form['access']['category_short_code'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->category_short_code);
 
    $form['access']['assessment_category_type'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->assessment_category_type);
    $form['access']['assessment_name'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->assessment_name);
    $form['access']['group_name'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->group_name);
    $form['access']['term_name'][$account->assessment_cat_det_descriptor_id] =  array('#value' => $account->term_name);
    $form['access']['year'][$account->assessment_cat_det_descriptor_id] = array('#value' => $account->year);
    $form['access']['assessment_type_code'][$account->assessment_cat_det_descriptor_id] =  array('#value' => $account->assessment_type_code);
$form['access']['max_marks'][$account->assessment_cat_det_descriptor_id] =  array('#value' => $account->max_marks);

  //  $form['access']['assessment_id'][$account->assessment_cat_det_descriptor_id] =  array('#value' => $account->assessment_id);
  //  $form['access']['assessment_category_detail_id'][$account->assessment_cat_det_descriptor_id] =  array('#value' => $account->assessment_category_detail_id);
	
    $form['access']['assessment_cat_det_descriptor_id'][$account->assessment_cat_det_descriptor_id] =  array('#type' =>hidden,
'#value' => $account->assessment_cat_det_descriptor_id);
	$form['access']['operations'][$account->assessment_cat_det_descriptor_id] = array('#value' => l(t('edit'), "coscholdesc/edit/$account->assessment_cat_det_descriptor_id", array('query' => $destination)));	
	$form['access']['operations2'][$account->assessment_cat_det_descriptor_id] = array('#value' => l(t('delete'), "coscholdesc/delete/$account->assessment_cat_det_descriptor_id", array('query' => $destination)));	
	$i = $i + 1;
  }
// db_set_active('default');

  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));
  $form['#theme'] = 'access_cat_det_descriptor_theme';   
  $form['totalcount'] = array(
	'#type' => 'hidden', '#default_value' => ($i  -1 )
  );  
  return $form;
}

function v3_cce_coschol_descriptors_theme() {
	return array(
		'access_cat_det_descriptor_theme' => array('arguments'=> array('form' => NULL),),
	);
}

function theme_access_cat_det_descriptor_theme($form)
{
$rows = array();
$i = 1;

foreach(element_children($form['access']['assessment_cat_det_descriptor_id']) as $key) {
	$row = array(); 
//       $row[] =  drupal_render($form['access']['account'][$i]);
  $row[] =  drupal_render($form['access']['year'][$key]);
  $row[] =  drupal_render($form['access']['group_name'][$key]);
      
 $row[] =  drupal_render($form['access']['term_name'][$key]);
 $row[] =  drupal_render($form['access']['assessment_name'][$key]);

     
       $row[] =  drupal_render($form['access']['assessment_type_code'][$key]);
       $row[] =  drupal_render($form['access']['descriptor_name'][$key]);
     //  $row[] =  drupal_render($form['access']['descriptor_description'][$key]);
      //  $row[] =  drupal_render($form['access']['category_short_code'][$key]);
       $row[] =  drupal_render($form['access']['assessment_category_type'][$key]);
 $row[] =  drupal_render($form['access']['max_marks'][$key]);
      

      
      // $row[] =  drupal_render($form['access']['assessment_id'][$key]);
      // $row[] =  drupal_render($form['access']['assessment_category_detail_id'][$key]);
      // $row[] =  drupal_render($form['access']['assessment_cat_det_descriptor_id'][$key]);
       $row[] =  drupal_render($form['access']['operations'][$key]);	   
       $row[] =  drupal_render($form['access']['operations2'][$key]);	   
	$rows[] = $row; 
	$i = $i +1 ;
}


if(count($rows)){
//			$header = array( theme('table_select_header_cell'), t('Group Name'), t('Group Desc'), t('Group Id') );
				$header = array(  t('Year'), t('Group Name'), t('Term Name'),t('Assessment Name'), t('Assessment Type Code'), t('Descriptor Name'), 
 t('Assessment Category Type'),t('Total Marks') );
				
				  $header[] = array('data' => t('Operations'), 'colspan' => 2);
  }
  else{
    $header = array(t('Descriptor Name'), t('Year')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No Co-Scholostics Descriptors were found'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows); 
//$output .= drupal_render($form['options']); 
// $output .= drupal_render($form['options']['submit']); 
  $form['access']['#access'] = false;
 return $output . drupal_render($form); 
 return $output ; 
}  





function ahah_for_assterm_to_derive_defaultvalues_for_descriptors() {

$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;
		$gid = $form['#post']['assesscatdetlist'];
		db_set_active('qtxt_db');

		$sqlg = "select concat( b.descriptor_name, ' - ' , cast(max_marks as char), ' - ' , category_short_code) 'desc', b.assessment_cat_det_descriptor_id from cce_assesment_category_details a, cce_assesment_category_details_master c , cce_assesment_cat_det_descriptor_master b where a.assessment_category_detail_id = $gid and a.master_assessment_category_detail_id = c.assessment_category_detail_id and c.assessment_category_detail_id = b.assessment_category_detail_id and not exists ( select '*' from cce_assesment_cat_det_descriptor x where x.assessment_category_detail_id = a.assessment_category_detail_id  and x.master_assessment_cat_det_descriptor_id = b.assessment_cat_det_descriptor_id  ) ";

        $resultg = db_query($sqlg);
		$valueg[''] = 'Select a Value.. ';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->assessment_cat_det_descriptor_id] = $datag->desc;
		}
		db_set_active('default');
		$result = count($valueg);
		if ( $result == 1 )  {
			$valueg[''] = 'All default values have been defined..';
		}

		$form['default_list']['#options'] = $valueg;
		$form['default_list']['#multiple'] = true;
		$form['default_list']['#attributes'] = array('size'=>20);
		
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
	
           $form = form_builder('form_details', $form, $form_state);			
				$output = $form['default_list'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));

}


function cocholdesc_ahah_for_category_details() {

$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;
		$gid = $form['#post']['assessname'];
		db_set_active('qtxt_db');

		$sqlg = "select  b.assessment_category_type, b.assessment_category_detail_id from cce_assesment_category_details_v b  where assessment_id = $gid  order by assessment_category_type  ";

        $resultg = db_query($sqlg);
		$valueg[''] = 'Select a Value.. ';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->assessment_category_detail_id] = $datag->assessment_category_type;
		}
		db_set_active('default');
		
		$form['assesscatdetlist']['#options'] = $valueg;
		
		$form['assesscatdetlist']['#ahah'] = array(
				  	'path' => 'coscholdesc/year/ahahjs2',
				  	'wrapper' => 'ahah-wrapper-defaultlist',
				  	'method' => 'replace',
				  			)	;
		$form['assesscatdetlist']['#prefix'] = '<div id = "ahah-wrapper-catdetlist">';
		$form['assesscatdetlist']['#suffix'] =  '</div>';		
							
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
	
           $form = form_builder('form_details', $form, $form_state);			
				$output = $form['assesscatdetlist'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));

}


function cocholdesc_ahah_for_group() {

$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;
		$gid = $form['#post']['group'];
		db_set_active('qtxt_db');

		$sqlg = "select  b.assessment_id, b.assessment_name  from cce_assesment_types b  where group_id = $gid 
		and assessment_category_code not in ( 'FA', 'SA') order by assessment_name";

        $resultg = db_query($sqlg);
		$valueg[''] = 'Select a Value.. ';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->assessment_id] = $datag->assessment_name;
		}
		db_set_active('default');
		
		$form['assessname']['#options'] = $valueg;
		
		$form['assessname']['#ahah'] = array(
				  	'path' => 'coscholdesc/year/ahahjs1',
				  	'wrapper' => 'ahah-wrapper-catdetlist',
				  	'method' => 'replace',
				  			)	;
		$form['assessname']['#prefix'] = '<div id = "ahah-wrapper-group">';
		$form['assessname']['#suffix'] =  '</div>';		
							
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
	
           $form = form_builder('form_details', $form, $form_state);			
				$output = $form['assessname'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));

}