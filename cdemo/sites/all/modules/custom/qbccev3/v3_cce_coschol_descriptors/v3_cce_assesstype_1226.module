<?php



function v3_cce_assesstype_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'v3_cce_assesstype'),
  );
}


function v3_cce_assesstype_help($path, $arg) {
  global $user;

  switch ($path) {
    case 'assesstype':
      return '<p>'. t('Drupal allows users to register, login, log out, maintain user profiles, etc. Users of the site may not use their own names to post content until they have signed up for a user account.') .'</p>';
	
	}
  
}  
function v3_cce_assesstype_menu() {
	$items['assesstype'] = array(
    'title' => 'CCE - Define assesstype',
    'description' => 'List, add, and edit assesstype.',
    'page callback' => 'cce_assesstype',
    'page arguments' => array('list'),
    'access arguments' => array('administer users'),
	'type' => MENU_CALLBACK,	
	);

  $items['assesstype/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['assesstype/create'] = array(
    'title' => 'Add Assessment Category Type',
    'page arguments' => array('create'),
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );	
  
  $items['assesstype/edit'] = array(
    'title' => 'Edit assesstypement Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('assesstype_edit'),
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
  );
  $items['assesstype/delete'] = array(
    'title' => 'Delete assesstypement Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('assesstype_delete'),
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
  );  
	
 $items['assesstype/year/ahahjs2'] = array(
        'page callback' => 'ahah_for_assterm_to_derive_defaultvalues',
        'type' => MENU_CALLBACK,
		'access callback' => 'user_access',
		'access arguments' => array('access content'),	
  );
	  
  
return $items;
}

function assesstype_edit(&$form_state, $fid) {
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT year_id, term_id, group_id, assessment_category_code, assessment_name, academic_weighting_percentage, period, grading_type_id, ordering_sequence, assessment_type_code FROM {cce_assesment_types_v} WHERE assessment_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }
		  $form['assessment_id'] = array('#type' => 'value',
			'#value' => $fid,
		  );		  



// get the list of active Year

		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT year_id, concat( year_from, ' - ', year_to) year_desc FROM {cce_year} a where
		a.active_flag = 'Y'");
		$yearOptions = array( '' => t('Select the Year') );
		while ($row = db_fetch_object($result1)){
		  $yearOptions[$row->year_id ] = $row->year_desc; 
		}
		db_set_active('default');	


		$form['year'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Year'),
			'#options'=> $yearOptions,
			'#title' => t('Year'),
			'#disabled' => FALSE,
			'#default_value' => $field->year_id,
		);


		db_set_active('qtxt_db');	
		$result1 = db_query("select concat(term_name, ' - ' , term_description) term, term_id  from {cce_term} where year_id = $field->year_id");
		$termOptions = array( );
		while ($row = db_fetch_object($result1)){
		  $termOptions[$row->term_id ] = $row->term; 
		}
		db_set_active('default');	
		
		
		 $form['terms'] = array(
				'#type' => 'select',
				'#title' => t('Terms'),
				'#options' =>  $termOptions,
				'#description' => t('Please select the Term'),
				'#default_value' => $field->term_id,
				'#disabled' => FALSE,
     	  );		


		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT group_id, concat( group_name, ' - ',  group_description) group_desc FROM {cce_groups} a ");
		$groupOptions = array();
		while ($row = db_fetch_object($result1)){
		  $groupOptions[$row->group_id ] = $row->group_desc; 
		}
		db_set_active('default');	


		$form['group'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Group'),
			'#options'=> $groupOptions,
			'#default_value' => $field->group_id,
			'#title' => t('Group'),
		);

// Category Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT assesstypement_category_code, assesstypement_category_desc  FROM {cce_assesment_categories} a ");
		$categoryOptions = array();
		while ($row = db_fetch_object($result1)){
		  $categoryOptions[$row->assesstypement_category_code ] = $row->assesstypement_category_desc; 
		}
		db_set_active('default');	


		$form['category'] = array(
			'#type' => 'select',
			'#description' => t('Please select the category'),
			'#options'=> $categoryOptions,
			'#title' => t('assesstypement Category'),
			'#default_value' => $field->assesstypement_category_code,
		);

		
		$form['assesstypename'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique name for this type of assesstypement'),
			  '#size' => 60,
			  '#maxlength' => 500,
		  '#title' => 'assesstypement Name',			  
			'#default_value' => $field->assesstypement_name,
		);
		
		$form['weightage'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a weightage percentage for the final report.'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'Weightage Percentage ',
			'#default_value' => $field->academic_weighting_percentage,
		);
		

// Grading Details
		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT grading_type_id, concat( grading_name, ' - ' , grading_desc ) grading_info FROM {cce_assesment_grading_type} a ");
		$gradingOptions = array();
		while ($row = db_fetch_object($result1)){
		  $gradingOptions[$row->grading_type_id ] = $row->grading_info; 
		}
		db_set_active('default');	

		

		$form['grading'] = array(
			'#type' => 'select',
			'#description' => t('Please select the grading'),
			'#options'=> $gradingOptions,
			'#title' => t('Grading Type'),
			'#default_value' => $field->grading_type_id,
			
		);


		$form['period'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter the range of months that the student will be evaluated for this assesstypement type'),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Period',
			 '#default_value' => $field->period,
		);
				

		$form['sequence'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a sequence number '),
			  '#size' => 60,
			  '#maxlength' => 100,
			 '#title' => 'Sequence',
			 '#default_value' => $field->ordering_sequence,
		);
/*				
		$form['asstypecode'] = array(
			'#type' => 'textfield',
			'#description' => t('Please enter a unique value to identify this combination. A system generated value will be used if left blank'),
			  '#size' => 60,
			  '#maxlength' => 60,
			 '#title' => 'assesstypement Type Code',
		);
*/		
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Edit assesstypement'),                                                 
	  );

	return $form;
		


}

function assesstype_edit_submit ($form, &$form_state) {

		
	$assesstypeId = $form_state['values']['assesstypement_id'];
	$year = $form_state['values']['year'];
	$terms = $form_state['values']['terms'];
	$group = $form_state['values']['group'];
	$category = $form_state['values']['category'];
	$assesstypename = $form_state['values']['assesstypename'];
	$weightage = $form_state['values']['weightage'];
	$grading = $form_state['values']['grading'];
	$period = $form_state['values']['period'];
	$sequence = $form_state['values']['sequence'];




			$assesstypename = str_replace("'", "''", $assesstypename);
			$period = str_replace("'", "''", $period);
			
		db_set_active('qtxt_db');


		$field = db_fetch_object(db_query("SELECT count(*) numvalue  FROM {cce_assesment_types} a, {cce_term} b WHERE b.term_id = a.term_id and b.year_id = %d and a.group_id = %d and  assesstypement_category_code = '%s' ", $year, $group, $category));
		db_set_active('default');

		  if (!$field) {
			drupal_not_found();
			return;
		  }

		$counter = $field->numvalue;	
		if ( empty($counter) ) {
		$counter = 1;
		}
		else {
		$counter = $counter + 1;
		}			
		$assTypeCode = $group . '-' . $category .  $counter ;

		db_set_active('qtxt_db');
		
		db_query("update {cce_assesment_types} set term_id = %d , group_id = %d,  assesstypement_category_code = '%s', assesstypement_name = '%s', period =  '%s', academic_weighting_percentage = %d, term_weighting_percentage = %d, grading_type_id = %d, ordering_sequence = %d, assesstypement_type_code = '%s' WHERE assesstypement_id = %d ", $terms, $group, $category, $assesstypename, $period, $weightage, $weightage, $grading, $sequence, $assTypeCode, $assesstypeId);
			
//		db_query("update {cce_assesstype} set group_name = '%s', group_description = '%s' WHERE group_id = %d ", $groupName, $groupDesc, $groupId);
		
		db_set_active('default');

		drupal_set_message(t('The assesstypement Name  %field has been updated.', array('%field' => $form_state['values']['assesstypename'])));

		cache_clear_all();
  		unset ( $_SESSION['group_filter_value'] );

		$form_state['redirect'] = 'assesstype/list';
		return;
}

function assesstype_delete(&$form_state, $fid) {


  
		db_set_active('qtxt_db');
		$field = db_fetch_object(db_query("SELECT assesstypement_name FROM {cce_assesment_types} WHERE assesstypement_id = %d", $fid));
		db_set_active('default');

		if (!$field) {
			drupal_not_found();
			return;
		  }

		  $form['assesstypeid'] = array('#type' => 'value', '#value' => $fid);
		  $form['assesstypename'] = array('#type' => 'value', '#value' => $field->assesstypement_name);
		 // $form['groupdesc'] = array('#type' => 'value', '#value' => $field->group_description);

		  return confirm_form($form,
			t('Are you sure you want to delete the Group Name %field?', array('%field' => $field->assesstypement_name)), 'assesstype',
			t('This action cannot be undone.  If you want to keep the user-entered data, instead of deleting the field you may wish to <a href="@edit-field">edit this field</a> .', array('@edit-field' => url('assesstype/edit/'. $fid))),
			t('Delete'), t('Cancel'));
		}

/**
 * Process a field delete form submission.
 */
function assesstype_delete_submit($form, &$form_state) {
		db_set_active('qtxt_db');
		db_query('DELETE FROM {cce_assesment_types} WHERE assesstypement_id = %d', $form_state['values']['assesstypeid']);
		db_set_active('default');
		cache_clear_all();

		drupal_set_message(t('The assesstypement Name  %field has been deleted.', array('%field' => $form_state['values']['assesstypename'])));
  		unset ( $_SESSION['group_filter_value'] );
		$form_state['redirect'] = 'assesstype/list';
		return;
}


function cce_assesstype($callback_arg = '') {
/*
        $output = drupal_get_form('assesstype_filter_form');
        $output .= drupal_get_form('assesstype_details');
  return $output;
  */
  
  $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;

//  drupal_set_message("Operamd - $op ");	
  
  switch ($op) {
    case t('Create Assessment Category Type'):
    case 'create':
      $output = drupal_get_form('assesstype_create');
      break;

	  default:
      if (!empty($_POST['assesstype']) && isset($_POST['operation']) && ($_POST['operation'] == 'delete')) {
        $output = drupal_get_form('group_multiple_delete_confirm');
      }
      else {
        $output = drupal_get_form('assesstype_filter_form');
        $output .= drupal_get_form('assesstype_details');
      }
  }
  return $output;
  
}

function assesstype_create() {


// get the list of active Year

		db_set_active('qtxt_db');	
		$result1 = db_query("SELECT assessment_id, assessment_name FROM {cce_assesment_types} a ");
		$accessOptions = array( '' => t('Select the Assessment Name') );
		while ($row = db_fetch_object($result1)){
		  $accessOptions[$row->assessment_id ] = $row->assessment_name; 
		}
		db_set_active('default');	


		$form['assessname'] = array(
			'#type' => 'select',
			'#description' => t('Please select the Assessment Name'),
			'#options'=> $accessOptions,
			'#title' => t('Assessment Name'),
			'#disabled' => FALSE,
			'#ahah' => array(
				  	'path' => 'assesstype/year/ahahjs2',
				  	'wrapper' => 'ahah-wrapper-defaultlist',
				  	'method' => 'replace',
				  			)			
		);

		$form['default_list']=array(
				'#type'=>'select',
				'#title' => t('Folks'),
				'#default_value' => array('1'=>'Joe'),
				'#options' =>  array( '' => t('Select ..') ),
				'#multiple' => true,
				'#attributes'=>array('size'=>20),
				 '#prefix' => '<div id = "ahah-wrapper-defaultlist">',
				'#suffix' => '</div>',				
			);

	
	 $form['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Create Assessment Category Type'),                                                 
	  );

	return $form;

}

function assesstype_create_submit($form, &$form_state) {


		  
   $op = $form_state['values']['op'];
  

	$year = $form_state['values']['year'];
	$terms = $form_state['values']['terms'];
	$group = $form_state['values']['group'];
	$category = $form_state['values']['category'];
	$assesstypename = $form_state['values']['assesstypename'];
		$assesstypename = str_replace("'", "''", $assesstypename);
	$weightage =  $form_state['values']['weightage'];
	$grading = $form_state['values']['grading'];
	$asstypecode = $form_state['values']['assTypeCode'];
	$period = $form_state['values']['period'];
		$period = str_replace("'", "''", $period);
    $sequence = $form_state['values']['sequence'];

	if ( empty($asstypecode) ) {
		db_set_active('qtxt_db');


		$field = db_fetch_object(db_query("SELECT count(*) numvalue  FROM {cce_assesment_types} a, {cce_term} b WHERE b.term_id = a.term_id and b.year_id = %d and a.group_id = %d and  assesstypement_category_code = '%s' ", $year, $group, $category));
		db_set_active('default');

		  if (!$field) {
			drupal_not_found();
			return;
		  }

		$counter = $field->numvalue;	
		if ( empty($counter) ) {
		$counter = 1;
		}
		else {
		$counter = $counter + 1;
		}			
			$assTypeCode = $group . '-' . $category .  $counter ;
	}
	else {
	$assTypeCode = $asstypecode;
	}
	drupal_set_message("Assignment Type Code - $assTypeCode ");	
	


		db_set_active('qtxt_db');

			$groupName = str_replace("'", "''", $groupName);
			$groupDesc = str_replace("'", "''", $groupDesc);


			$result = db_query( "INSERT INTO `cce_assesment_types`  (`assesstypement_id`,  `term_id`,  `group_id`,  `assesstypement_category_code`,  `assesstypement_name`,  `period`,  `academic_weighting_percentage`,  `term_weighting_percentage`,  `grading_type_id`,  `ordering_sequence`,  `assesstypement_type_code`,  `creation_date`,  `update_date`,  `created_by`,  `updated_by`)  VALUES  (  null,  $terms,  $group,  '$category',  '$assesstypename',  '$period', $weightage,  $weightage, $grading,  $sequence,  '$assTypeCode',  sysdate(),  sysdate(),  'admin',  'admin'  )");
		db_set_active('default');
			drupal_set_message(t("Your assesstypement Type has been inserted successfully."));	

			unset ( $_SESSION['group_filter_value'] );
			
		  $form_state['redirect'] = 'assesstype/list';
		  return;

}



/**
 * Form builder; Return form for user administration filters.
 *
 * @ingroup forms
 * @see user_filter_form_submit()
 */
function assesstype_filter_form() {

			
	 $i = 0;
	  $form['filters'] = array(
		'#type' => 'fieldset',
		'#title' => t('Show only assesstype where'),

	  );

		db_set_active('qtxt_db');	

		$result = db_query("select assessment_category_type, assessment_description, assessment_category_code, assessment_category_detail_id  from {cce_assesment_category_details} a  " );

		$options = array('' => t('Select..'));

		$c2Val = "";
		if(!empty($_SESSION['group_filter_value'])) {
			$c2Val = &$_SESSION['group_filter_value'];
		} else {
			$c2Val = "";
		}
		
		while ($row = db_fetch_object($result)) {
				$options[$row->assessment_category_detail_id ] =  $row->assessment_category_type; 
		}

		db_set_active('default');	 
		

		$form['filters']['group'] = array(
		  '#title' => 'Assessment Category Type like ',
		  '#type' => 'textfield',
		  '#size' => 60,
		  '#maxlength' => 128,
		  '#default_value' => $c2Val,
		);



	 $form['filters']['buttons']['submit'] = array(                                                          
		'#type' => 'submit',
		'#value' => t('Filter'),                                                 
	  );

	return $form;

}



function assesstype_filter_form_submit($form, &$form_state) {
  $op = $form_state['values']['op'];
//  drupal_set_message("Filter Form Submit Operamd - $op ");	  
  switch ($op) {
    case t('Filter'): 


      if (isset($form_state['values']['group'])) {
		//	drupal_set_message(t("In the Filter, Class  selected"));	 	  
			$filter = $form_state['values']['group'];
			$_SESSION['group_filter_value'] = $form_state['values']['group'];
	  }
	  
      break;
  }
  
  $form_state['redirect'] = 'assesstype';
  return;
}



function assesstype_details($form_state) {
global $user;
$profile =  profile_load_profile($user);
$myMobileNumber =  $user->profile_mobile;  

  $header = array(
    array(),
    array('data' => t('Group Name'), 'field' => 'b.standard'),
    array('data' => t('Group Description'), 'field' => 'b.section'),
	t('Operations'),
  );

$clVal = &$_SESSION['group_filter_value'] ;
drupal_set_message(t("Class Filter 1 - $clVal"));	

  
$filterClass = "";
    if ( $clVal != "" ) {
		$clVal = strtoupper($clVal);
			$filterClass = " and upper(b.assessment_category_type) like '%$clVal%' ";
	} else {
			$filterClass = " and b.assessment_category_type = b.assessment_category_type ";
	}

  db_set_active('qtxt_db');	
  $sql = "select assessment_category_type, assessment_description, assessment_name , assessment_category_desc, group_name, term_name, year, assessment_type_code , assessment_category_detail_id, assessment_id  from  {cce_assesment_category_details_v} b  where 1 = 1  " . $filterClass  ." order by assessment_name, assessment_category_type " ; 
    $query_count = "select COUNT(assessment_category_detail_id) from  {cce_assesment_category_details_v} b  where 1 = 1 " . $filterClass  ;


  
   $sql .= tablesort_sql($header);

  $result = pager_query($sql, 1000, 0, $query_count);
  db_set_active('default');


    $form['access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Access log settings'),
    '#tree' => TRUE,
	'#visible' => false,
  );


  $accounts = array();

$i = 1;  
  while ($account = db_fetch_object($result)) {

  $form['access']['account'][$i] = array(
		'#type' => 'checkbox',
		'#return_value' => $account->assessment_category_detail_id,
		'#default_value' => 0,
		'#tree' => TRUE,

	  );

 
 
    $form['access']['assessment_category_type'][$account->assessment_category_detail_id] = array('#value' => $account->assessment_category_type);
    $form['access']['assessment_description'][$account->assessment_category_detail_id] =  array('#value' => $account->assessment_description);
    $form['access']['assessment_name'][$account->assessment_category_detail_id] = array('#value' => $account->assessment_name);
    $form['access']['assessment_category_desc'][$account->assessment_category_detail_id] =  array('#value' => $account->assessment_category_desc);
    $form['access']['group_name'][$account->assessment_category_detail_id] = array('#value' => $account->group_name);
    $form['access']['term_name'][$account->assessment_category_detail_id] =  array('#value' => $account->term_name);
    $form['access']['year'][$account->assessment_category_detail_id] = array('#value' => $account->year);
    $form['access']['assessment_type_code'][$account->assessment_category_detail_id] =  array('#value' => $account->assessment_type_code);
    
	
    $form['access']['assessment_id'][$account->assessment_category_detail_id] =  array('#value' => $account->assessment_id);
	
    $form['access']['assessment_category_detail_id'][$account->assessment_category_detail_id] =  array('#value' => $account->assessment_category_detail_id);
	$form['access']['operations'][$account->assessment_category_detail_id] = array('#value' => l(t('edit'), "assesstype/edit/$account->assessment_category_detail_id", array('query' => $destination)));	
	$form['access']['operations2'][$account->assessment_category_detail_id] = array('#value' => l(t('delete'), "assesstype/delete/$account->assessment_category_detail_id", array('query' => $destination)));	
	$i = $i + 1;
  }
// db_set_active('default');

  $form['pager'] = array('#value' => theme('pager', NULL, 1000, 0));
  $form['#theme'] = 'access_type_description_theme';   
  $form['totalcount'] = array(
	'#type' => 'hidden', '#default_value' => ($i  -1 )
  );  
  return $form;
}

function v3_cce_assesstype_theme() {
	return array(
		'access_type_description_theme' => array('arguments'=> array('form' => NULL),),
	);
}

function theme_access_type_description_theme($form)
{
$rows = array();
$i = 1;

foreach(element_children($form['access']['assessment_category_detail_id']) as $key) {
	$row = array(); 
//       $row[] =  drupal_render($form['access']['account'][$i]);
       $row[] =  drupal_render($form['access']['assessment_category_type'][$key]);
       $row[] =  drupal_render($form['access']['assessment_description'][$key]);
       $row[] =  drupal_render($form['access']['assessment_name'][$key]);
       $row[] =  drupal_render($form['access']['assessment_category_desc'][$key]);
       $row[] =  drupal_render($form['access']['group_name'][$key]);
       $row[] =  drupal_render($form['access']['term_name'][$key]);
       $row[] =  drupal_render($form['access']['year'][$key]);
       $row[] =  drupal_render($form['access']['assessment_type_code'][$key]);
       $row[] =  drupal_render($form['access']['assessment_id'][$key]);
       $row[] =  drupal_render($form['access']['assessment_category_detail_id'][$key]);
       $row[] =  drupal_render($form['access']['operations'][$key]);	   
       $row[] =  drupal_render($form['access']['operations2'][$key]);	   
	$rows[] = $row; 
	$i = $i +1 ;
}

if(count($rows)){
//			$header = array( theme('table_select_header_cell'), t('Group Name'), t('Group Desc'), t('Group Id') );
				$header = array(  t('Assessment Category Type'), t('Assessment Category Description'), t('Assessment Name'), t('Assessment Category Description'), t('Group Name'), t('Term Name'), t('Year'), t('Assessment Type Code'), t('Assessment Id'), t('Assessment Category Detial Id')  );
				
				  $header[] = array('data' => t('Operations'), 'colspan' => 2);
  }
  else{
    $header = array(t('Assessment Category Type'), t('Year')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No assesstype were found'),
      'colspan' => 2,
      'style' => 'text-align:center'
    );
    $rows[] = $row;
  }
$output = theme('table', $header, $rows); 
//$output .= drupal_render($form['options']); 
// $output .= drupal_render($form['options']['submit']); 
  $form['access']['#access'] = false;
 return $output . drupal_render($form); 
 return $output ; 
}  





function ahah_for_assterm_to_derive_defaultvalues() {

$form_state = array('storage' => NULL, 'submitted' => FALSE);
		$form_build_id = $_POST['form_build_id'];

		// Get for the form from the cache
		$form = form_get_cache($form_build_id, $form_state);
  
		// Get the form set up to process
		$args = $form['#parameters'];
		$form_id = array_shift($args);
		$form_state['post'] = $form['#post'] = $_POST;
		$gid = $form['#post']['assessname'];
		db_set_active('qtxt_db');

		$sqlg = "select  b.assessment_category_type, b.assessment_category_detail_id     from cce_assesment_types a, cce_assesment_category_details_master b  where assessment_id = $gid  and b.assessment_category_code = a.assessment_category_code  and not exists ( select '*' from cce_assesment_category_details x where x.assessment_id = a.assessment_id  and upper(x.assessment_category_type) = upper(b.assessment_category_type ) ) ";

        $resultg = db_query($sqlg);
		$valueg[''] = 'Select a Value..';
		while($datag = db_fetch_object($resultg))
		{
		$valueg[$datag->assessment_category_detail_id] = $datag->assessment_category_type;
		}
		db_set_active('default');

		$form['default_list']['#options'] = $valueg;
		$form['default_list']['#multiple'] = true;
		$form['default_list']['#attributes'] = array('size'=>20);
		
		form_set_cache($form_build_id, $form, $form_state);
				$form += array(
					'#post' => $_POST,
					'#programmed' => FALSE,
				  );
	
           $form = form_builder('form_details', $form, $form_state);			
				$output = $form['default_list'];
				unset($output['#prefix'],$output['#suffix']);
				$out1 =  drupal_render($output);
				drupal_json(array('status' => TRUE, 'data' => $out1));

}




