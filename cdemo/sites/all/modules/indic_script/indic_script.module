<?php
// $Id: indic_script.module,v 1.6.4.7 2009/10/17 10:52:45 4vinoth Exp $
  
/**
 * Implementation of hook_help
 */
function indic_script_help($path, $arg) {
  switch ($path) {
    case 'admin/help#indic_script':
      $output = '<p>'. t('This Module enables Indic Language Scripts typing in Drupal Text Fields and Text Area Fields So that users can create their content in their Language like Google providing native language typing in Orkut.
	  Older name of this module was tamil_type, now it supports Tamil, Tamil 99, Hindi, Malayalam, Bengali, Gujarathi, Kannada, Oriya, Punjab and Telugu Type writting as well as peonitic typing (so the name is indic_script). 
What it does exactly?') .'</p>';
  
$output .= '<p>'. t('If the user type "ammaa" in English it will convert this to the Tamil word அம்மா (means mother). The Keystroke F9 is set as Hot key for switching between languages.') .'</p>';

$output .= '<p>'. t('* <b>You should enable/add the block "indic_script" to make this module work.</b>
This module is created mainly for indian people to enjoy their Own Language in www.') .'</p>';
$output .= '<p>'. t('
<h3>Features in this release.</h3>
    <ul>
	<li>Configuration Page for admin</li>
    <li>Field/page wise enabling or disabling feature</li>
    <li>Inline Help Display</li>
	</ul>
<h3>Whats make us Busy?</h3>
    <ul>
	    <li>Integration with WYSIWYG Editors</li>
	</ul>
	
<h3>Installation/Configuration</h3>
	<ul>
	<li>Install the module as usual. </li>
	<li>Goto admin/settings/indic_script configuration page and enable the languages.</li>
	<li>goto permissions page and give permissions for users to access indic script typing.</li>
	<li>type type type...</li>
	</ul>
	
If characters doesn\'t show properly in your browser you can find some helpful hints in <a target="_blank" href="http://en.wikipedia.org/wiki/Wikipedia:Enabling_complex_text_support_for_Indic_scripts">this Wikipedia page( Multilingual support (Indic))</a>

Thanks to all co-operation of the Tamil Friends. Please send us your suggestions. 
Vinoth <vinoth.3v@gmail.com>
<a target="_blank" href="http://Tamil2Friends.com">http://Tamil2Friends.com</a>') .'</p>';
      return $output;
  }
}



/**
 * Implementation of hook_perm
 * Administer -> User management -> Permissions
 */
function indic_script_perm() {
  return array('administer indic_script', 'access indic_script');
}


/**
 * Implementation of hook_menu
 */
function indic_script_menu() {

    $items = array();

    $items['admin/settings/indic_script'] = array(
        'page callback' => 'drupal_get_form', 
        'page arguments' => array('indic_script_admin_settings_form'), 
        'title' => 'Indic Script', 
        'access arguments' => array('administer site configuration'),
        'description' => 'Configure the main indic_script module.', 
        'file' => 'indic_script.admin.inc',
    );
    
	// use cookies instead of variable dump
    // ajax call
    /*$items['indic_script/userlang/set'] = array(
        'page callback'     => 'indic_script_set_user_lang',
        'access callback'   => 'user_access',
        'access arguments'  => array('access indic_script'),
        'type'              => MENU_CALLBACK,
    );    
	*/
	
	$items['tamil'] = array(
		'title' => t('Tamil Typing'),
		'access arguments' => array('access content'),
		'page callback' => 'indic_script_tamil_type_page_demo',
		'file' => 'indic_script.tamil.demo.inc',
	);
    return $items;
}



/**
 * Implementation of hook_theme
 */
function indic_script_theme($existing, $type, $theme, $path) {
  return array(
    'indic_script_selector' => array(
      'arguments' => array(
        'form' => null,
      ),
    ),
  );
}


/**
 * Implementation of hook_elements
 * Replace textarea with indic_script using callback function (indic_script_process_textarea)
 */
function indic_script_elements() {
    $type = array();

    if (user_access('access indic_script')) {
        $type['textfield'] = array(
            '#process' => array( 'indic_script_process_input' ),
        );
        $type['textarea'] = array(
            '#process' => array( 'indic_script_process_textarea' ),
        );
    }
    return $type;
}

/**
 * process the input
 *
 */
function indic_script_process_input($element) {
  if (isset($element['#attributes']['disabled']) && $element['#attributes']['disabled'] == 'disabled') {
    return $element;
  }
  if($element['#id']=='edit-pass' || 
  $element['#id']=='edit-name' || 
  $element['#id']=='edit-openid-identifier' || 
  $element['#id']=='edit-mail' || 
  $element['#id']=='edit-captcha' ){
    return $element;
  }
  
  if(!_indic_script_element_check($element['#id'])){
    return $element;
  }
  
  $onkeypress	="javascript:indic_script_lang(event);" ;
  $onkeydown 	="javascript:toggleKBMode(event);" ;  
  $onfocus 		="javascript:indic_script_show_typing_method();" ;
  $onblur 		="javascript:indic_script_hide_typing_method();" ;

 
  _indic_script_attach_element_event($element, 'onkeypress', $onkeypress);
  _indic_script_attach_element_event($element, 'onkeydown', $onkeydown);
  _indic_script_attach_element_event($element, 'onfocus', $onfocus);
  _indic_script_attach_element_event($element, 'onblur', $onblur);
  
  return $element;
}




/**
 * This function create the HTML objects required for the indic_script
 *
 * @param $element
 *   A fully populated form elment to add the editor to
 * @return
 *   The same $element with extra indic_script markup and initialization
 */
function indic_script_process_textarea($element) {
  global $user, $indic_script_simple_toolbar_ids;

  //skip this one, surely nobody wants WYSIWYG here

  switch ($element['#id']) {
    case 'edit-excl-list':
    case 'edit-simple-incl-list':
    case 'edit-simple-incl-paths':
    case 'edit-simple-incl-fields':
    case 'edit-excl-fields':
    case 'edit-excl-paths':
    case 'edit-js-conf':
    case 'indic_script_excl_fields':
      return $element;
      break;
  }


  if (isset($element['#attributes']['disabled']) && $element['#attributes']['disabled'] == 'disabled') {
    return $element;
  }
    
  if(!_indic_script_element_check($element['#id'])){
    return $element;
  }

  $onkeypress	="javascript:indic_script_lang(event);" ;
  $onkeydown 	="javascript:toggleKBMode(event);" ;  
  $onfocus 		="javascript:indic_script_show_typing_method();" ;
  $onblur 		="javascript:indic_script_hide_typing_method();" ;

 
  _indic_script_attach_element_event($element, 'onkeypress', $onkeypress);
  _indic_script_attach_element_event($element, 'onkeydown', $onkeydown);
  _indic_script_attach_element_event($element, 'onfocus', $onfocus);
  _indic_script_attach_element_event($element, 'onblur', $onblur);
  

  return $element;
}


/**
 * Implementation of hook_init
 */
function indic_script_init() {
    
    drupal_add_js(drupal_get_path('module', 'indic_script') .'/js/common.js');
    drupal_add_css(drupal_get_path('module', 'indic_script') .'/css/indic_script.css');
    $langs = _indic_script_languages();
    $enabled_langs = variable_get('indic_script_langs', array());
    //print_r($enabled_langs);
    foreach ($langs as $lang) {
        if (array_key_exists($lang['key'], $enabled_langs)){
            //print($lang['key']);
            drupal_add_js($lang['js']);
        }
    }
    
}

/**
 * Implementation of hook_footer().
 */
function indic_script_footer($main = 0) {

  if ((!_indic_script_path_check()) || (!user_access('access indic_script'))){
    return;
  }
  
  return theme('indic_script_selector', drupal_get_form('indic_script_type_method_form'));

}

/**
 * Implementation of hook_block
 */
/*function indic_script_block($op='list', $delta=0) {

  if ($op == "list") {
    $block[0]["info"] = t("indic_script");
    return $block;
  }
  else if ($op == 'view') {
    if (user_access('access indic_script')) {
		$block['subject'] = t('indic_script');
		$block['content'] = indic_script_block_selector();
		return $block;
    }
  }
}
*/



/**
 * indic_script_select_form
 *
 * @return
 *   elect_form
 */
function indic_script_type_method_form(){
    static $options;
    global $user;
    if (!$options){
        $langs = _indic_script_languages();
        $enabled_langs = variable_get('indic_script_langs', array());
        $options['en'] = t('English');
        foreach ($langs as $lang) {
            if ($enabled_langs[$lang['key']]){
                $options[$lang['key']] = $lang['title'];
            }
        }
    }
    
	/*$form['destination'] = array(
		'#type' => 'hidden',
		'#value' =>  url('indic_script/userlang/set'),
		'#id' => 'is_dest_url',
	);*/
	
	$cook_lang = $_COOKIE['indic_script_user_lang'];
	if(!$cook_lang){
	  $cook_lang = 'en';
	}
	$form['indic_script_typein'] = array(
		'#type' => 'select',
		'#title' => t('Type in (F9)'),
		'#options' => $options,
		//'#default_value' => variable_get('indic_default_lang_'.$user->uid, variable_get('indic_default_lang','en')),
		'#default_value' => $cook_lang,
		'#weight' => 0,
		'#attributes' => array(
			'onchange' => 'indic_script_change_lang(this);'
		),
	);
	$form['indic_script_show_tips'] = array(
		'#type' => 'checkbox',
		'#title' => t('Show Tips?'),
		'#default_value' => TRUE,
	);
	return $form;
}


function indic_script_set_user_lang() {

    global $user;
    if ($user->uid == 0) return;
    
    variable_set('indic_default_lang_'.$user->uid, arg(3));
    
    $output = '';
    $output .= '<?xml version="1.0" encoding="UTF-8"?>';
    $output .= '<xml><result>OK';
    $output .= '</result>';
    $output .= '</xml>';

    drupal_set_header("Content-Type: text/xml");
    exit($output);
}


/**
 * This function helper function 
 *
 */
function _indic_script_path_check() {

  static $visible;
  
  if (isset($visible)){
  
      return $visible;
      
  }

  $excl_mode = variable_get('indic_script_page_excl_mode', 0);

  $excl_paths = variable_get('indic_script_excl_paths', '');
  
  if (excl_mode < 2) {
  
    $path = drupal_get_path_alias($_GET['q']);
    //Compare with the internal and path alias (if any).
    $page_match = drupal_match_path($path, $excl_paths);
    if ($path != $_GET['q'] && !$page_match) {
      $page_match = drupal_match_path($_GET['q'], $excl_paths);
    }
    if ($excl_mode == 1 && $page_match) {
      $visible = TRUE;
    }
    else if ($excl_mode == 0 && !$page_match) {
      $visible = TRUE;
    }else{
      $visible = FALSE;
    }
  }else {
  
    $visible = drupal_eval($excl_paths);
    
  }
  
  return $visible;
    
}

/**
 * This function helper function 
 *
 */
function _indic_script_element_check($element_id) {

  $path_found = _indic_script_path_check();
  
  // path is the first priority
  if (!$path_found){
  	return $path_found;
  }
  
  static $excl_mode, $excl_fields, $excl_paths;

  if(!isset($excl_mode)){
    $excl_mode = variable_get('indic_script_excl_mode', 0);
  }
  if(!isset($excl_fields)){
    $excl_fields = variable_get('indic_script_excl_fields', '');
  }
  if(!isset($excl_paths)){
    $excl_paths = variable_get('indic_script_excl_paths', '');
  }

  $arr_excl_fields = preg_split("/[\s,]+/", strip_tags($excl_fields));
  $field_found = _indic_script_element_id_check($element_id, $arr_excl_fields);

  //$found = $field_found || $path_found;

  $result =  ($excl_mode == 1) ? $field_found : !$field_found;
  
  return $result;
    
}

/**
 * This function helper function 
 *
 */
function _indic_script_element_id_check($search, $array) {
  foreach ($array as $key => $value) {
    if (!empty($value) && preg_match('/^'. str_replace('*', '.*', addslashes($value)) .'$/i', $search)) {
      return true;
    }
  }
  return false;
}


function _indic_script_languages() {
  static $langs;
  if (!isset($langs)){
    $langs = module_invoke_all('indic_script_api', 'lang');
  }
  return $langs;
}

/**
 * Implementation of indic_script_api
 * 
 */
function indic_script_indic_script_api($op) {

  $path = drupal_get_path('module', 'indic_script');
  
  switch($op){
    case 'lang':
      $lang[] = array(
	    'lang' 	=> 'ta',
		'key' 	=> 'ta_en',
		'title' => t('Tamil Thanglish'),
        'js' => $path . '/js/' . 'ta.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ta',
		'key' 	=> 'ta_99',
		'title' => t('Tamil 99'),
        'js' => $path . '/js/' . 'ta.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ta',
		'key' 	=> 'ta_tw',
		'title' => t('Tamil TypeWriter'),
        'js' => $path . '/js/' . 'ta.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ma',
		'key' 	=> 'ma_en',
		'title' => t('Malayalam Phonetic'),
        'js' => $path . '/js/' . 'ma.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ma',
		'key' 	=> 'ma_tw',
		'title' => t('Malayalam TypeWriter'),
        'js' => $path . '/js/' . 'ma.js',
	  );
      $lang[] = array(
	    'lang' 	=> 'hi',
		'key' 	=> 'hi_en',
		'title' => t('Hindi Phonetic'),
        'js' => $path . '/js/' . 'hi.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'hi',
		'key' 	=> 'hi_tw',
		'title' => t('Hindi TypeWriter'),
        'js' => $path . '/js/' . 'hi.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'be',
		'key' 	=> 'be_en',
		'title' => t('Bengali Phonetic'),
        'js' => $path . '/js/' . 'be.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'be',
		'key' 	=> 'be_tw',
		'title' => t('Bengali TypeWriter'),
        'js' => $path . '/js/' . 'be.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'gu',
		'key' 	=> 'gu_en',
		'title' => t('Gujarati Phonetic'),
        'js' => $path . '/js/' . 'gu.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'gu',
		'key' 	=> 'gu_tw',
		'title' => t('Gujarati TypeWriter'),
        'js' => $path . '/js/' . 'gu.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ka',
		'key' 	=> 'ka_en',
		'title' => t('Kannada Phonetic'),
        'js' => $path . '/js/' . 'ka.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'ka',
		'key' 	=> 'ka_tw',
		'title' => t('Kannada TypeWriter'),
        'js' => $path . '/js/' . 'ka.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'or',
		'key' 	=> 'or_en',
		'title' => t('Oriya Phonetic'),
        'js' => $path . '/js/' . 'or.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'or',
		'key' 	=> 'or_tw',
		'title' => t('Oriya TypeWriter'),
        'js' => $path . '/js/' . 'or.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'pu',
		'key' 	=> 'pu_en',
		'title' => t('Punjab Phonetic'),
        'js' => $path . '/js/' . 'pu.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'pu',
		'key' 	=> 'pu_tw',
		'title' => t('Punjab TypeWriter'),
        'js' => $path . '/js/' . 'pu.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'te',
		'key' 	=> 'te_en',
		'title' => t('Telugu Phonetic'),
        'js' => $path . '/js/' . 'te.js',
	  );
	  $lang[] = array(
	    'lang' 	=> 'te',
		'key' 	=> 'te_tw',
		'title' => t('Telugu TypeWriter'),
        'js' => $path . '/js/' . 'te.js',
	  );
    
	  return $lang;
  }
}



/**
 * helper function
 *
 */
function _indic_script_attach_element_event(&$element, $event, $js) {
  if (isset($element['#attributes'][$event])){
    $element['#attributes'][$event] = $js + $element['#attributes'][$event] ;
  }else{
    $element['#attributes'][$event] = $js;
  }
}



// _theme


/**
 * Themes the indic_script_selector.
 */
function theme_indic_script_selector($form) {

  $output = '<div id="indic_script_selector">' . $form . '</div>';
  return $output;
  
}
